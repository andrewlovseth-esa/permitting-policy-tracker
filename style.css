/*

    Theme Name: ESA Permiting Policy Tracker
    Theme URI: https://policytracker.esassoc.com/
    Description: Version 1.0 of Permiting Policy Tracker
    Version: 1.0

*/
@import url("https://fonts.googleapis.com/css2?family=Old+Standard+TT:ital,wght@0,400;0,700;1,400&family=PT+Serif:ital,wght@0,400;0,700;1,400;1,700&family=Raleway:ital,wght@0,100..900;1,100..900&display=swap");
/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Prevent font size inflation */
html {
  -moz-text-size-adjust: none;
  -webkit-text-size-adjust: none;
  text-size-adjust: none;
}

/* Remove default margin in favour of better control in authored CSS */
body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
  margin: 0;
}

ul,
ol {
  margin-block: 0;
}

/* Remove list styles on ul, ol elements with a nav role, which suggests default styling will be removed */
ul[role=nav],
ol[role=nav] {
  list-style: none;
  padding: 0;
}

/* Set core body defaults */
body {
  min-height: 100vh;
  line-height: 1.5;
}

/* Set shorter line heights on headings and interactive elements */
h1,
h2,
h3,
h4,
button,
input,
label {
  line-height: 1.1;
}

/* Make images easier to work with */
img,
picture {
  max-width: 100%;
  display: block;
  height: auto;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
}

/* Make sure textareas without a rows attribute are not tiny */
textarea:not([rows]) {
  min-height: 10em;
}

/* Anything that has been anchored to should have extra scroll margin */
:target {
  scroll-margin-block: 5ex;
}

time {
  display: block;
}

/*

    Theme Name: ESA Permiting Policy Tracker
    Theme URI: https://policytracker.esassoc.com/
    Description: Version 1.0 of Permiting Policy Tracker
    Version: 1.0

*/
html {
  scroll-behavior: smooth;
}

body {
  background: #ffffff;
}

.site {
  display: grid;
  gap: 0;
  grid-template-rows: auto 1fr auto;
  min-height: 100vh;
}

/*

    Theme Name: ESA Permiting Policy Tracker
    Theme URI: https://policytracker.esassoc.com/
    Description: Version 1.0 of Permiting Policy Tracker
    Version: 1.0

*/
body,
button,
input,
select,
optgroup,
textarea {
  font-family: "Raleway", sans-serif;
}

a {
  color: #000000;
  text-decoration: none;
}

::-moz-selection {
  background: #05a59d;
  text-shadow: none;
}

::selection {
  background: #05a59d;
  color: white;
  text-shadow: none;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: 400;
}

.sub-header {
  font-size: clamp(0.79rem, 0.788rem + 0.01vw, 0.8rem);
  text-transform: uppercase;
  letter-spacing: 0.1em;
  color: #05a59d;
  font-weight: bold;
}

.analysis-header {
  font-size: clamp(0.8888rem, 0.8665rem + 0.1113vw, 1rem);
  font-weight: bold;
}

.badge {
  display: inline-block;
  font-family: "Raleway", sans-serif;
  font-size: 0.6125rem;
  text-transform: uppercase;
  letter-spacing: 0.1em;
  font-weight: bold;
  background-color: #fafafa;
  border-radius: 0.125rem;
  border: 1px solid #dcdcdc;
  line-height: 1;
  padding: 6px 0.5rem 4px;
}
.badge.dark {
  background-color: #464646;
  border-color: #464646;
  color: #ffffff;
}

.status {
  display: inline-flex;
  align-items: center;
  gap: 0.25rem;
  font-family: "Raleway", sans-serif;
  font-size: 0.6125rem;
  text-transform: uppercase;
  letter-spacing: 0.1em;
  font-weight: bold;
  border: 1px solid #dcdcdc;
  line-height: 1;
  padding: 6px 0.5rem 4px;
}
.status__indicatator {
  display: inline-block;
  width: 5px;
  height: 5px;
  border-radius: 50%;
}

/*

    Theme Name: ESA Permiting Policy Tracker
    Theme URI: https://policytracker.esassoc.com/
    Description: Version 1.0 of Permiting Policy Tracker
    Version: 1.0

*/
.grid {
  display: grid;
}

.flex {
  display: flex;
}

.justify-start {
  justify-content: flex-start;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.justify-end {
  justify-content: flex-end;
}

.items-start {
  align-items: flex-start;
}

.items-center {
  align-items: center;
}

.items-end {
  align-items: flex-end;
}

.items-stretch {
  align-items: stretch;
}

.place-center {
  place-content: center;
}

/*

    Theme Name: ESA Permiting Policy Tracker
    Theme URI: https://policytracker.esassoc.com/
    Description: Version 1.0 of Permiting Policy Tracker
    Version: 1.0

*/
.content-grid {
  display: grid;
  gap: 2rem;
  align-items: start;
  align-content: start;
  grid-template-columns: [full-width-start] minmax(0, auto) [content-start] repeat(4, minmax(auto, 1fr)) [content-end] minmax(0, auto) [full-width-end];
}
@media only screen and (min-width: 30rem) {
  .content-grid {
    grid-template-columns: [full-width-start] minmax(0, auto) [content-start] repeat(8, minmax(auto, 1fr)) [content-end] minmax(0, auto) [full-width-end];
  }
}
@media only screen and (min-width: 62rem) {
  .content-grid {
    grid-template-columns: [full-width-start] minmax(0, auto) [content-start] repeat(3, minmax(0, 4.5rem)) [narrow-start] repeat(6, minmax(0, 4.5rem)) [narrow-end] repeat(3, minmax(0, 4.5rem)) [content-end] minmax(0, auto) [full-width-end];
  }
}
.content-grid > * {
  grid-column: content;
}

.flow > * + * {
  margin-block-start: var(--flow-spacer, 1rem);
}

/*

    Theme Name: ESA Permiting Policy Tracker
    Theme URI: https://policytracker.esassoc.com/
    Description: Version 1.0 of Permiting Policy Tracker
    Version: 1.0

*/
.copy-1 {
  font-size: clamp(1rem, 0.95rem + 0.25vw, 1.25rem);
  line-height: 1.5;
}

.copy-2 {
  font-size: clamp(0.8888rem, 0.8665rem + 0.1113vw, 1rem);
  line-height: 1.5;
}

.copy-3 {
  font-size: clamp(0.79rem, 0.788rem + 0.01vw, 0.8rem);
  line-height: 1.5;
}

.copy a {
  text-decoration: underline;
}

.pile {
  display: grid;
  align-items: center;
  justify-content: center;
}
.pile > * {
  grid-column: 1;
  grid-row: 1;
}

/*

    Theme Name: ESA Permiting Policy Tracker
    Theme URI: https://policytracker.esassoc.com/
    Description: Version 1.0 of Permiting Policy Tracker
    Version: 1.0

*/
/*

    Theme Name: ESA Permiting Policy Tracker
    Theme URI: https://policytracker.esassoc.com/
    Description: Version 1.0 of Permiting Policy Tracker
    Version: 1.0

*/
.site-logo__link {
  display: flex;
  align-items: flex-end;
  gap: 1rem;
}
.site-logo__image {
  display: block;
  width: 4rem;
}
@media only screen and (min-width: 62rem) {
  .site-logo__image {
    width: 6.5rem;
  }
}
.site-logo__image img {
  width: 100%;
}

/*

    Theme Name: ESA Permiting Policy Tracker
    Theme URI: https://policytracker.esassoc.com/
    Description: Version 1.0 of Permiting Policy Tracker
    Version: 1.0

*/
.site-nav__desktop {
  display: none;
}
@media only screen and (min-width: 62rem) {
  .site-nav__desktop {
    display: flex;
    align-items: center;
    gap: 3rem;
    justify-content: flex-end;
  }
}
.site-nav__desktop-item {
  padding: 0.25rem 0;
}
.site-nav__desktop-link {
  display: inline-block;
  font-size: 1rem;
  border-bottom: 2px solid transparent;
  transition: all 300ms ease;
  font-weight: 700;
  text-transform: uppercase;
  letter-spacing: 0.05em;
  color: #6d6e71;
}
.site-nav__desktop-link:hover, .site-nav__desktop-link.active {
  border-color: #f9a134;
  color: #000000;
}
.site-nav__mobile {
  padding: 2rem;
  display: grid;
  gap: 2rem;
  align-self: start;
}
.site-nav__mobile-item {
  list-style-type: none;
  padding: 0;
  margin: 0;
}
.site-nav__mobile-link {
  display: block;
  color: #ffffff;
  font-size: clamp(1rem, 0.95rem + 0.25vw, 1.25rem);
  transition: all 150ms ease;
  font-weight: 500;
}

/*

    Theme Name: ESA Permiting Policy Tracker
    Theme URI: https://policytracker.esassoc.com/
    Description: Version 1.0 of Permiting Policy Tracker
    Version: 1.0

*/
#mobile-drawer {
  position: fixed;
  top: 0;
  left: -100%;
  height: 100vh;
  width: 75%;
  z-index: 999;
  color: #ffffff;
  box-shadow: 2px 0 5px rgba(0, 0, 0, 0.2);
  transform: translateX(-100%);
  transition: all 0.3s ease-in-out;
  background: #292929;
}
@media only screen and (min-width: 48rem) {
  #mobile-drawer {
    display: none !important;
  }
}
#mobile-drawer.is-open {
  transform: translateX(0);
  left: 0;
}

/*

    Theme Name: ESA Permiting Policy Tracker
    Theme URI: https://policytracker.esassoc.com/
    Description: Version 1.0 of Permiting Policy Tracker
    Version: 1.0

*/
.overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  background: transparent;
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.3s ease-in-out;
  z-index: 998;
}
.overlay.is-visible {
  opacity: 1;
  visibility: visible;
}

.hamburger {
  display: grid;
  justify-content: end;
}
@media only screen and (min-width: 48rem) {
  .hamburger {
    display: flex;
    align-items: center;
  }
}
@media only screen and (min-width: 62rem) {
  .hamburger {
    display: none;
  }
}
.hamburger__link {
  display: flex;
  align-items: center;
}
.hamburger__buns {
  width: 2rem;
  height: 22px;
  display: flex;
  align-items: center;
  margin-right: auto;
}
.hamburger__patty {
  width: 2rem;
  height: 2px;
  background: #7c7c7c;
  transition: all 0.2s;
  position: relative;
}
.hamburger__patty:after, .hamburger__patty:before {
  content: "";
  display: block;
  width: 2rem;
  height: 2px;
  background: #7c7c7c;
  position: absolute;
  z-index: 1;
  transition: all 0.2s;
}
.hamburger__patty:before {
  top: -6px;
}
.hamburger__patty:after {
  top: 6px;
}
.hamburger.nav-open .hamburger__patty {
  background: transparent;
}
.hamburger.nav-open .hamburger__patty::before {
  rotate: 45deg;
  top: 0;
}
.hamburger.nav-open .hamburger__patty::after {
  rotate: -45deg;
  top: 0;
}

.site-header {
  background-color: #ffffff;
  padding: 1.5rem 0;
  align-items: center;
  position: relative;
  z-index: 1000;
}
@media only screen and (min-width: 62rem) {
  .site-header {
    padding: 35px 0;
  }
}
.site-header__wrapper {
  display: grid;
  grid-template-columns: auto 1fr;
  align-items: center;
}

/*

    Theme Name: ESA Permiting Policy Tracker
    Theme URI: https://policytracker.esassoc.com/
    Description: Version 1.0 of Permiting Policy Tracker
    Version: 1.0

*/
/*

    Theme Name: ESA Permiting Policy Tracker
    Theme URI: https://policytracker.esassoc.com/
    Description: Version 1.0 of Permiting Policy Tracker
    Version: 1.0

*/
/*

    Theme Name: ESA Permiting Policy Tracker
    Theme URI: https://policytracker.esassoc.com/
    Description: Version 1.0 of Permiting Policy Tracker
    Version: 1.0

*/
.rescinded-policy {
  margin-top: 0.5rem;
  background: #ffffff;
  border: 1px solid #dcdcdc;
  border-radius: 0.125rem;
}
.rescinded-policy__header {
  display: grid;
  grid-template-columns: 1fr auto;
  align-items: center;
  gap: 0.5rem;
  cursor: pointer;
  padding: 1rem;
}
.rescinded-policy__header svg.caret path {
  fill: #c1272d;
}
.rescinded-policy__header.open svg.caret {
  transform: rotate(180deg);
}
.rescinded-policy__title {
  font-size: clamp(0.79rem, 0.788rem + 0.01vw, 0.8rem);
  font-weight: 600;
  display: grid;
  grid-template-columns: 0.75rem 1fr;
  align-items: start;
  gap: 0.5rem;
}
.rescinded-policy__title svg {
  width: 0.75rem;
  height: 0.75rem;
  transform: translateY(1px);
}
.rescinded-policy__title svg path {
  fill: #c1272d;
}
.rescinded-policy__body {
  interpolate-size: allow-keywords;
  transition: height 0.3s ease, padding 0.3s ease, overflow 0.3s ease 300ms;
  height: 0;
  overflow: hidden;
}
.rescinded-policy__body.open {
  height: auto;
  overflow: unset;
}
.rescinded-policy__description {
  padding: 0 1rem 1rem 1rem;
}
.rescinded-policy__link {
  display: inline-flex;
  align-items: center;
  gap: 0.25rem;
  color: #c1272d;
}
.rescinded-policy__link svg path {
  fill: #c1272d;
}
.rescinded-policy__footer {
  padding: 0 1rem 1rem 1rem;
}
.rescinded-policy__footer h4 {
  font-weight: bold;
}

.action {
  display: grid;
  align-items: start;
  padding: 0.75rem;
  border-radius: 0.125rem;
  border: 1px solid #dcdcdc;
  background-color: #ffffff;
  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.05);
  transition: all 0.3s ease;
}
.action:hover {
  cursor: pointer;
}
.action__header {
  display: grid;
  align-items: center;
  grid-template-columns: 1fr auto;
  gap: 0.75rem;
}
.action__header svg {
  transition: transform 0.3s ease;
}
.action__date {
  display: inline-block;
  padding-bottom: 0.25rem;
}
.action__title {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  gap: 0.5rem 0.75rem;
}
.action__title-text {
  display: block;
  line-height: 1.1;
  font-weight: 400;
  letter-spacing: -0.025em;
  font-size: 1rem;
  transition: all 0.3s ease;
}
@media only screen and (min-width: 48rem) {
  .action__title-text {
    font-size: 1.125rem;
  }
}
@media only screen and (min-width: 48rem) {
  .action.open {
    padding: 1.5rem 1.5rem;
  }
}
.action.open .action__header svg {
  transform: rotate(180deg);
}
@media only screen and (min-width: 48rem) {
  .action.open .action__title-text {
    font-size: 1.375rem;
    transform: translateY(0);
  }
}
.action.open .action__body {
  height: auto;
  cursor: default;
  overflow: visible;
}
.action.open .action__footer {
  cursor: default;
}
.action__body {
  height: 0;
  overflow: hidden;
  interpolate-size: allow-keywords;
  transition: height 0.3s ease, overflow 0.3s ease 300ms;
}
.action__body-wrapper {
  display: grid;
  gap: 1.5rem 2rem;
  align-items: start;
  padding: 1.5rem 0;
  border-top: 1px solid #efefef;
  margin-top: 0.75rem;
}
@media only screen and (min-width: 48rem) {
  .action__body-wrapper {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
}
.action__details {
  display: grid;
  grid-template-columns: repeat(2, minmax(0, 1fr));
  gap: 1.5rem 2rem;
}
.action__details .two-col {
  grid-column: span 2;
}
.action__detail .sub-header {
  padding-bottom: 0.125rem;
}
.action__analysis {
  background: #fafafa;
  border: 1px solid #dcdcdc;
  border-radius: 0.125rem;
  padding: 1rem;
}
.action__analysis-header {
  display: inline-block;
  padding-bottom: 0.75rem;
}
.action__analysis-list {
  display: grid;
  gap: 2rem;
  align-items: start;
}
.action__analysis .analysis-header {
  padding-bottom: 0.25rem;
}
.action__link {
  text-decoration: underline;
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
}
.action__value {
  line-height: 1.2;
}
.action__footer {
  display: flex;
  justify-content: space-between;
  padding-top: 1.5rem;
  border-top: 1px solid #dcdcdc;
}
@media only screen and (min-width: 48rem) {
  .action__footer {
    padding-top: 0.75rem;
  }
}
.action__footer-categories {
  display: flex;
  gap: 0.5rem;
  flex-wrap: wrap;
  max-width: 50%;
}
.action__footer-date {
  font-size: clamp(0.79rem, 0.788rem + 0.01vw, 0.8rem);
  color: #7c7c7c;
  font-style: italic;
}

/*

    Theme Name: ESA Permiting Policy Tracker
    Theme URI: https://policytracker.esassoc.com/
    Description: Version 1.0 of Permiting Policy Tracker
    Version: 1.0

*/
.hero {
  margin-bottom: 2rem;
}
.hero__photo {
  grid-column: 1/-1;
  grid-row: 1/span 2;
  z-index: 1;
  aspect-ratio: 16/6;
}
@media only screen and (min-width: 48rem) {
  .hero__photo {
    aspect-ratio: 16/4;
  }
}
.hero__photo img {
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}
.hero__info {
  align-self: end;
  grid-row: 2/span 2;
  z-index: 2;
  padding: 1.5rem;
  background-color: #ffffff;
  border-radius: 0.125rem;
  border: 1px solid #dcdcdc;
  grid-column: 2/span 4;
  box-shadow: 0px 49px 30px 0px rgba(0, 0, 0, 0.05), 0px 22px 22px 0px rgba(0, 0, 0, 0.09), 0px 5px 12px 0px rgba(0, 0, 0, 0.1), 0px 88px 35px 0px rgba(0, 0, 0, 0.01), 0px 137px 38px 0px rgba(0, 0, 0, 0);
}
@media only screen and (min-width: 30rem) {
  .hero__info {
    grid-column: 2/span 6;
  }
}
@media only screen and (min-width: 62rem) {
  .hero__info {
    grid-column: 2/span 8;
    padding: 2rem;
  }
}
.hero__headline {
  color: #000000;
  font-size: clamp(1.6019rem, 1.3119rem + 1.45vw, 3.0519rem);
  font-weight: 600;
  padding-bottom: 1rem;
}

/*

    Theme Name: ESA Permiting Policy Tracker
    Theme URI: https://policytracker.esassoc.com/
    Description: Version 1.0 of Permiting Policy Tracker
    Version: 1.0

*/
.list {
  display: grid;
  padding-bottom: 4rem;
  gap: 4rem 2rem;
  align-items: start;
}

.count {
  font-size: 0.75rem;
  font-weight: 700;
  line-height: 1;
  border-radius: 50%;
  height: 2rem;
  width: 2rem;
  border: 2px solid #f9a134;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: #f9a134;
  color: #ffffff;
}
.count.filtered {
  background-color: #ffffff;
  color: #f9a134;
}

.actions-list {
  min-height: 60vh;
  position: relative;
  transition: opacity 0.3s ease;
  padding-top: 1rem;
}
.actions-list.htmx-request {
  opacity: 0.2;
  pointer-events: none;
}
.actions-list.htmx-request::after {
  content: "";
  position: absolute;
  top: 10%;
  left: 50%;
  transform: translate(-50%, 0);
  width: 40px;
  height: 40px;
  border: 4px solid #dcdcdc;
  border-top: 4px solid #05a59d;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}
.actions-list__title {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  flex-wrap: wrap;
  font-size: clamp(1.2656rem, 1.1281rem + 0.6875vw, 1.9531rem);
}
@media only screen and (min-width: 48rem) {
  .actions-list__title {
    font-size: clamp(1.4238rem, 1.2203rem + 1.0175vw, 2.4413rem);
  }
}
.actions-list__title--text {
  white-space: nowrap;
}

@keyframes spin {
  0% {
    transform: translate(-50%, -50%) rotate(0deg);
  }
  100% {
    transform: translate(-50%, -50%) rotate(360deg);
  }
}
.date-group {
  display: grid;
  gap: 1rem;
}

/*

    Theme Name: ESA Permiting Policy Tracker
    Theme URI: https://policytracker.esassoc.com/
    Description: Version 1.0 of Permiting Policy Tracker
    Version: 1.0

*/
.filters {
  margin: 3rem 0 2rem 0;
}
.filters__wrapper {
  background-color: #fafafa;
  border-radius: 0.125rem;
  border: 1px solid #dcdcdc;
}
.filters__header {
  cursor: pointer;
  padding: 1rem;
}
@media only screen and (min-width: 48rem) {
  .filters__header {
    cursor: default;
  }
}
.filters__header-wrapper {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 0.5rem;
  width: 100%;
}
@media only screen and (min-width: 48rem) {
  .filters__header-wrapper {
    padding-bottom: 0.5rem;
    border-bottom: 1px solid #dcdcdc;
  }
}
.filters__header svg.caret {
  transition: transform 300ms ease;
}
@media only screen and (min-width: 48rem) {
  .filters__header svg.caret {
    display: none;
  }
}
.filters__header.open .filters__header-wrapper {
  padding-bottom: 0.5rem;
  border-bottom: 1px solid #dcdcdc;
}
.filters__header.open svg.caret {
  transform: rotate(180deg);
}
.filters__title {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  font-size: clamp(0.8888rem, 0.8665rem + 0.1113vw, 1rem);
  font-weight: 600;
  color: #000000;
}
.filters__title svg {
  width: 0.75rem;
  height: 0.75rem;
}
.filters__title svg path {
  fill: #f9a134;
}
.filters__body {
  width: 100%;
  padding: 1rem;
  padding-top: 0;
  interpolate-size: allow-keywords;
  transition: height 0.3s ease, overflow 0.3s ease 300ms;
}
.filters__body.closed {
  height: 0;
  overflow: hidden;
  padding: 0;
}
@media only screen and (min-width: 48rem) {
  .filters__body.closed {
    height: unset;
    overflow: unset;
    padding: 1rem;
    padding-top: 0;
  }
}
.filters__selects {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
  gap: 1rem;
}
.filters__clear {
  font-family: "Raleway", sans-serif;
  font-size: clamp(0.79rem, 0.788rem + 0.01vw, 0.8rem);
  font-weight: 600;
  color: #f9a134;
  background: #ffffff;
  border: 1px solid #f9a134;
  border-radius: 0.125rem;
  padding: 0.5rem 0.75rem;
  cursor: pointer;
  transition: all 0.2s ease;
}
.filters__clear:hover {
  background: #f9a134;
  color: #ffffff;
}
.filters__clear-wrapper {
  display: flex;
  justify-content: flex-end;
  width: 100%;
  padding-top: 1rem;
}
.filters select {
  padding: 0.5rem;
  border: 1px solid #dcdcdc;
  border-radius: 0.125rem;
  background-color: #ffffff;
  font-family: "Raleway", sans-serif;
  font-weight: 500;
  font-size: clamp(0.79rem, 0.788rem + 0.01vw, 0.8rem);
  color: #464646;
  cursor: pointer;
  width: 100%;
}
.filters select:focus {
  outline: none;
  border-color: #05a59d;
}
.filters input[type=text] {
  padding: 0.5rem;
  border: 1px solid #dcdcdc;
  border-radius: 0.125rem;
  background-color: #ffffff;
  font-family: "Raleway", sans-serif;
  font-weight: 500;
  font-size: clamp(0.79rem, 0.788rem + 0.01vw, 0.8rem);
  color: #464646;
  width: 100%;
}
.filters input[type=text]:focus {
  outline: none;
  border-color: #05a59d;
}
.filters .filter-detail.disabled label {
  color: #989898;
}
.filters .filter-detail label {
  display: block;
  padding-bottom: 0.5rem;
  font-family: "Raleway", sans-serif;
  font-size: 0.75rem;
  font-weight: bold;
  color: #000000;
  text-transform: uppercase;
  letter-spacing: 0.05em;
}
.filters .filter-detail.search {
  grid-column: span 2;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
