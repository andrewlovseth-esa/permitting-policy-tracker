/*

    Theme Name: ESA Permiting Policy Tracker
    Theme URI: https://policytracker.esassoc.com/
    Description: Version 1.0 of Permiting Policy Tracker
    Version: 1.0

*/
@import url("https://fonts.googleapis.com/css2?family=Old+Standard+TT:ital,wght@0,400;0,700;1,400&family=PT+Serif:ital,wght@0,400;0,700;1,400;1,700&family=Raleway:ital,wght@0,100..900;1,100..900&display=swap");
/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Prevent font size inflation */
html {
  -moz-text-size-adjust: none;
  -webkit-text-size-adjust: none;
  text-size-adjust: none;
}

/* Remove default margin in favour of better control in authored CSS */
body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
  margin: 0;
}

ul,
ol {
  margin-block: 0;
}

/* Remove list styles on ul, ol elements with a nav role, which suggests default styling will be removed */
ul[role=nav],
ol[role=nav] {
  list-style: none;
  padding: 0;
}

/* Set core body defaults */
body {
  min-height: 100vh;
  line-height: 1.5;
}

/* Set shorter line heights on headings and interactive elements */
h1,
h2,
h3,
h4,
button,
input,
label {
  line-height: 1.1;
}

/* Make images easier to work with */
img,
picture {
  max-width: 100%;
  display: block;
  height: auto;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
}

/* Make sure textareas without a rows attribute are not tiny */
textarea:not([rows]) {
  min-height: 10em;
}

/* Anything that has been anchored to should have extra scroll margin */
:target {
  scroll-margin-block: 5ex;
}

time {
  display: block;
}

/*

    Theme Name: ESA Permiting Policy Tracker
    Theme URI: https://policytracker.esassoc.com/
    Description: Version 1.0 of Permiting Policy Tracker
    Version: 1.0

*/
html {
  scroll-behavior: smooth;
}

body {
  background: #ffffff;
}

.site {
  display: grid;
  gap: 0;
  grid-template-rows: auto 1fr auto;
  min-height: 100vh;
}

/*

    Theme Name: ESA Permiting Policy Tracker
    Theme URI: https://policytracker.esassoc.com/
    Description: Version 1.0 of Permiting Policy Tracker
    Version: 1.0

*/
body,
button,
input,
select,
optgroup,
textarea {
  font-family: "Raleway", sans-serif;
}

a {
  color: #000000;
  text-decoration: none;
}

::-moz-selection {
  background: #05a59d;
  text-shadow: none;
}

::selection {
  background: #05a59d;
  color: white;
  text-shadow: none;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: 400;
}

.sub-header {
  font-size: clamp(0.79rem, 0.788rem + 0.01vw, 0.8rem);
  text-transform: uppercase;
  letter-spacing: 0.1em;
  color: #05a59d;
  font-weight: bold;
}

.analysis-header {
  font-size: clamp(0.8888rem, 0.8665rem + 0.1113vw, 1rem);
  font-weight: bold;
}

.badge {
  display: inline-block;
  font-family: "Raleway", sans-serif;
  font-size: 0.6125rem;
  text-transform: uppercase;
  letter-spacing: 0.1em;
  font-weight: bold;
  background-color: #fafafa;
  border-radius: 0.125rem;
  border: 1px solid #dcdcdc;
  line-height: 1;
  padding: 6px 0.5rem 4px;
}
.badge.dark {
  background-color: #464646;
  border-color: #464646;
  color: #ffffff;
}

.status {
  display: inline-flex;
  align-items: center;
  gap: 0.25rem;
  font-family: "Raleway", sans-serif;
  font-size: 0.6125rem;
  text-transform: uppercase;
  letter-spacing: 0.1em;
  font-weight: bold;
  border: 1px solid #dcdcdc;
  line-height: 1;
  padding: 6px 0.5rem 4px;
}
.status__indicatator {
  display: inline-block;
  width: 5px;
  height: 5px;
  border-radius: 50%;
}

/*

    Theme Name: ESA Permiting Policy Tracker
    Theme URI: https://policytracker.esassoc.com/
    Description: Version 1.0 of Permiting Policy Tracker
    Version: 1.0

*/
.grid {
  display: grid;
}

.flex {
  display: flex;
}

.justify-start {
  justify-content: flex-start;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.justify-end {
  justify-content: flex-end;
}

.items-start {
  align-items: flex-start;
}

.items-center {
  align-items: center;
}

.items-end {
  align-items: flex-end;
}

.items-stretch {
  align-items: stretch;
}

.place-center {
  place-content: center;
}

/*

    Theme Name: ESA Permiting Policy Tracker
    Theme URI: https://policytracker.esassoc.com/
    Description: Version 1.0 of Permiting Policy Tracker
    Version: 1.0

*/
.content-grid {
  display: grid;
  gap: 2rem;
  align-items: start;
  align-content: start;
  grid-template-columns: [full-width-start] minmax(0, auto) [content-start] repeat(4, minmax(auto, 1fr)) [content-end] minmax(0, auto) [full-width-end];
}
@media only screen and (min-width: 30rem) {
  .content-grid {
    grid-template-columns: [full-width-start] minmax(0, auto) [content-start] repeat(8, minmax(auto, 1fr)) [content-end] minmax(0, auto) [full-width-end];
  }
}
@media only screen and (min-width: 62rem) {
  .content-grid {
    grid-template-columns: [full-width-start] minmax(0, auto) [content-start] repeat(3, minmax(0, 4.5rem)) [narrow-start] repeat(6, minmax(0, 4.5rem)) [narrow-end] repeat(3, minmax(0, 4.5rem)) [content-end] minmax(0, auto) [full-width-end];
  }
}
.content-grid > * {
  grid-column: content;
}

.flow > * + * {
  margin-block-start: var(--flow-spacer, 1rem);
}

/*

    Theme Name: ESA Permiting Policy Tracker
    Theme URI: https://policytracker.esassoc.com/
    Description: Version 1.0 of Permiting Policy Tracker
    Version: 1.0

*/
.copy-1 {
  font-size: clamp(1rem, 0.95rem + 0.25vw, 1.25rem);
  line-height: 1.5;
}

.copy-2 {
  font-size: clamp(0.8888rem, 0.8665rem + 0.1113vw, 1rem);
  line-height: 1.5;
}

.copy-3 {
  font-size: clamp(0.79rem, 0.788rem + 0.01vw, 0.8rem);
  line-height: 1.5;
}

.copy a {
  text-decoration: underline;
}

.pile {
  display: grid;
  align-items: center;
  justify-content: center;
}
.pile > * {
  grid-column: 1;
  grid-row: 1;
}

/*

    Theme Name: ESA Permiting Policy Tracker
    Theme URI: https://policytracker.esassoc.com/
    Description: Version 1.0 of Permiting Policy Tracker
    Version: 1.0

*/
/*

    Theme Name: ESA Permiting Policy Tracker
    Theme URI: https://policytracker.esassoc.com/
    Description: Version 1.0 of Permiting Policy Tracker
    Version: 1.0

*/
.site-logo__link {
  display: flex;
  align-items: flex-end;
  gap: 1rem;
}
.site-logo__image {
  display: block;
  width: 4rem;
}
@media only screen and (min-width: 62rem) {
  .site-logo__image {
    width: 6.5rem;
  }
}
.site-logo__image img {
  width: 100%;
}

/*

    Theme Name: ESA Permiting Policy Tracker
    Theme URI: https://policytracker.esassoc.com/
    Description: Version 1.0 of Permiting Policy Tracker
    Version: 1.0

*/
.site-nav__desktop {
  display: none;
}
@media only screen and (min-width: 62rem) {
  .site-nav__desktop {
    display: flex;
    align-items: center;
    gap: 2rem;
    justify-content: flex-end;
  }
}
.site-nav__desktop-item {
  padding: 0.25rem 0;
}
.site-nav__desktop-link {
  display: inline-block;
  font-size: 0.875rem;
  border-bottom: 2px solid transparent;
  transition: all 300ms ease;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.05em;
  color: #292929;
}
.site-nav__desktop-link:hover, .site-nav__desktop-link.active {
  border-color: #05a59d;
}
.site-nav__mobile {
  padding: 2rem;
  display: grid;
  gap: 2rem;
  align-self: start;
}
.site-nav__mobile-item {
  list-style-type: none;
  padding: 0;
  margin: 0;
}
.site-nav__mobile-link {
  display: block;
  color: #ffffff;
  font-size: clamp(1rem, 0.95rem + 0.25vw, 1.25rem);
  transition: all 150ms ease;
  font-weight: 500;
}

/*

    Theme Name: ESA Permiting Policy Tracker
    Theme URI: https://policytracker.esassoc.com/
    Description: Version 1.0 of Permiting Policy Tracker
    Version: 1.0

*/
#mobile-drawer {
  position: fixed;
  top: 0;
  left: -100%;
  height: 100vh;
  width: 75%;
  z-index: 999;
  color: #ffffff;
  box-shadow: 2px 0 5px rgba(0, 0, 0, 0.2);
  transform: translateX(-100%);
  transition: all 0.3s ease-in-out;
  background: #292929;
}
@media only screen and (min-width: 48rem) {
  #mobile-drawer {
    display: none !important;
  }
}
#mobile-drawer.is-open {
  transform: translateX(0);
  left: 0;
}

/*

    Theme Name: ESA Permiting Policy Tracker
    Theme URI: https://policytracker.esassoc.com/
    Description: Version 1.0 of Permiting Policy Tracker
    Version: 1.0

*/
.overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  background: transparent;
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.3s ease-in-out;
  z-index: 998;
}
.overlay.is-visible {
  opacity: 1;
  visibility: visible;
}

.hamburger {
  display: grid;
  justify-content: end;
}
@media only screen and (min-width: 48rem) {
  .hamburger {
    display: flex;
    align-items: center;
  }
}
@media only screen and (min-width: 62rem) {
  .hamburger {
    display: none;
  }
}
.hamburger__link {
  display: flex;
  align-items: center;
}
.hamburger__buns {
  width: 2rem;
  height: 22px;
  display: flex;
  align-items: center;
  margin-right: auto;
}
.hamburger__patty {
  width: 2rem;
  height: 2px;
  background: #7c7c7c;
  transition: all 0.2s;
  position: relative;
}
.hamburger__patty:after, .hamburger__patty:before {
  content: "";
  display: block;
  width: 2rem;
  height: 2px;
  background: #7c7c7c;
  position: absolute;
  z-index: 1;
  transition: all 0.2s;
}
.hamburger__patty:before {
  top: -6px;
}
.hamburger__patty:after {
  top: 6px;
}
.hamburger.nav-open .hamburger__patty {
  background: transparent;
}
.hamburger.nav-open .hamburger__patty::before {
  rotate: 45deg;
  top: 0;
}
.hamburger.nav-open .hamburger__patty::after {
  rotate: -45deg;
  top: 0;
}

.site-header {
  background-color: #ffffff;
  padding: 1.5rem 0;
  align-items: center;
  position: relative;
  z-index: 1000;
}
@media only screen and (min-width: 62rem) {
  .site-header {
    padding: 2rem 0;
  }
}
.site-header__wrapper {
  display: grid;
  grid-template-columns: auto 1fr;
  align-items: center;
}

/*

    Theme Name: ESA Permiting Policy Tracker
    Theme URI: https://policytracker.esassoc.com/
    Description: Version 1.0 of Permiting Policy Tracker
    Version: 1.0

*/
/*

    Theme Name: ESA Permiting Policy Tracker
    Theme URI: https://policytracker.esassoc.com/
    Description: Version 1.0 of Permiting Policy Tracker
    Version: 1.0

*/
/*

    Theme Name: ESA Permiting Policy Tracker
    Theme URI: https://policytracker.esassoc.com/
    Description: Version 1.0 of Permiting Policy Tracker
    Version: 1.0

*/
.rescinded-policy {
  margin-top: 0.5rem;
  background: #ffffff;
  border: 1px solid #dcdcdc;
  border-radius: 0.125rem;
}
.rescinded-policy__header {
  display: grid;
  grid-template-columns: 1fr auto;
  align-items: center;
  gap: 0.5rem;
  cursor: pointer;
  padding: 1rem;
}
.rescinded-policy__header svg.caret path {
  fill: #c1272d;
}
.rescinded-policy__header.open svg.caret {
  transform: rotate(180deg);
}
.rescinded-policy__title {
  font-size: clamp(0.79rem, 0.788rem + 0.01vw, 0.8rem);
  font-weight: 600;
  display: grid;
  grid-template-columns: 0.75rem 1fr;
  align-items: start;
  gap: 0.5rem;
}
.rescinded-policy__title svg {
  width: 0.75rem;
  height: 0.75rem;
  transform: translateY(1px);
}
.rescinded-policy__title svg path {
  fill: #c1272d;
}
.rescinded-policy__body {
  interpolate-size: allow-keywords;
  transition: height 0.3s ease, padding 0.3s ease, overflow 0.3s ease 300ms;
  height: 0;
  overflow: hidden;
}
.rescinded-policy__body.open {
  height: auto;
  overflow: unset;
}
.rescinded-policy__description {
  padding: 0 1rem 1rem 1rem;
}
.rescinded-policy__link {
  display: inline-flex;
  align-items: center;
  gap: 0.25rem;
  color: #c1272d;
}
.rescinded-policy__link svg path {
  fill: #c1272d;
}
.rescinded-policy__footer {
  padding: 0 1rem 1rem 1rem;
}
.rescinded-policy__footer h4 {
  font-weight: bold;
}

.action {
  display: grid;
  align-items: start;
  padding: 0.75rem;
  border-radius: 0.125rem;
  border: 1px solid #dcdcdc;
  background-color: #ffffff;
  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.05);
  transition: all 0.3s ease;
}
.action:hover {
  cursor: pointer;
}
.action__header {
  display: grid;
  align-items: center;
  grid-template-columns: 1fr auto;
  gap: 0.75rem;
}
.action__header svg {
  transition: transform 0.3s ease;
}
.action__date {
  display: inline-block;
  padding-bottom: 0.25rem;
}
.action__title {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  gap: 0.5rem 0.75rem;
}
.action__title-text {
  display: block;
  line-height: 1.1;
  font-weight: 400;
  letter-spacing: -0.025em;
  font-size: 1rem;
  transition: all 0.3s ease;
}
@media only screen and (min-width: 48rem) {
  .action__title-text {
    font-size: 1.125rem;
  }
}
@media only screen and (min-width: 48rem) {
  .action.open {
    padding: 1.5rem 1.5rem;
  }
}
.action.open .action__header svg {
  transform: rotate(180deg);
}
@media only screen and (min-width: 48rem) {
  .action.open .action__title-text {
    font-size: 1.375rem;
    transform: translateY(0);
  }
}
.action.open .action__body {
  height: auto;
  cursor: default;
  overflow: visible;
}
.action.open .action__footer {
  cursor: default;
}
.action__body {
  height: 0;
  overflow: hidden;
  interpolate-size: allow-keywords;
  transition: height 0.3s ease, overflow 0.3s ease 300ms;
}
.action__body-wrapper {
  display: grid;
  gap: 1.5rem 2rem;
  align-items: start;
  padding: 1.5rem 0;
  border-top: 1px solid #efefef;
  margin-top: 0.75rem;
}
@media only screen and (min-width: 48rem) {
  .action__body-wrapper {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
}
.action__details {
  display: grid;
  grid-template-columns: repeat(2, minmax(0, 1fr));
  gap: 1.5rem 2rem;
}
.action__details .two-col {
  grid-column: span 2;
}
.action__detail .sub-header {
  padding-bottom: 0.125rem;
}
.action__analysis {
  background: #fafafa;
  border: 1px solid #dcdcdc;
  border-radius: 0.125rem;
  padding: 1rem;
}
.action__analysis-header {
  display: inline-block;
  padding-bottom: 0.75rem;
}
.action__analysis-list {
  display: grid;
  gap: 2rem;
  align-items: start;
}
.action__analysis .analysis-header {
  padding-bottom: 0.25rem;
}
.action__link {
  text-decoration: underline;
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
}
.action__value {
  line-height: 1.2;
}
.action__footer {
  display: flex;
  justify-content: flex-end;
  padding-top: 1.5rem;
  border-top: 1px solid #dcdcdc;
}
@media only screen and (min-width: 48rem) {
  .action__footer {
    padding-top: 0.75rem;
  }
}
.action__footer-date {
  font-size: clamp(0.79rem, 0.788rem + 0.01vw, 0.8rem);
  color: #7c7c7c;
  font-style: italic;
}

/*

    Theme Name: ESA Permiting Policy Tracker
    Theme URI: https://policytracker.esassoc.com/
    Description: Version 1.0 of Permiting Policy Tracker
    Version: 1.0

*/
.hero {
  margin-bottom: 2rem;
}
.hero__photo {
  grid-column: 1/-1;
  grid-row: 1/span 2;
  z-index: 1;
  aspect-ratio: 16/6;
}
@media only screen and (min-width: 48rem) {
  .hero__photo {
    aspect-ratio: 16/4;
  }
}
.hero__photo img {
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}
.hero__info {
  align-self: end;
  grid-row: 2/span 2;
  z-index: 2;
  padding: 1.5rem;
  background-color: #ffffff;
  border-radius: 0.125rem;
  border: 1px solid #dcdcdc;
  grid-column: 2/span 4;
  box-shadow: 0px 49px 30px 0px rgba(0, 0, 0, 0.05), 0px 22px 22px 0px rgba(0, 0, 0, 0.09), 0px 5px 12px 0px rgba(0, 0, 0, 0.1), 0px 88px 35px 0px rgba(0, 0, 0, 0.01), 0px 137px 38px 0px rgba(0, 0, 0, 0);
}
@media only screen and (min-width: 30rem) {
  .hero__info {
    grid-column: 2/span 6;
  }
}
@media only screen and (min-width: 62rem) {
  .hero__info {
    grid-column: 2/span 8;
  }
}
.hero__headline {
  color: #05a59d;
  font-size: clamp(1.2656rem, 1.1281rem + 0.6875vw, 1.9531rem);
  padding-bottom: 0.5rem;
}

/*

    Theme Name: ESA Permiting Policy Tracker
    Theme URI: https://policytracker.esassoc.com/
    Description: Version 1.0 of Permiting Policy Tracker
    Version: 1.0

*/
.list {
  display: grid;
  padding-bottom: 4rem;
  gap: 4rem 2rem;
  align-items: start;
}

.count {
  font-size: 0.75rem;
  font-weight: 700;
  line-height: 1;
  border-radius: 50%;
  height: 2rem;
  width: 2rem;
  border: 2px solid #f9a134;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: #f9a134;
  color: #ffffff;
}
.count.filtered {
  background-color: #ffffff;
  color: #f9a134;
}

.actions-list {
  min-height: 60vh;
  position: relative;
  transition: opacity 0.3s ease;
  padding-top: 1rem;
}
.actions-list.htmx-request {
  opacity: 0.2;
  pointer-events: none;
}
.actions-list.htmx-request::after {
  content: "";
  position: absolute;
  top: 10%;
  left: 50%;
  transform: translate(-50%, 0);
  width: 40px;
  height: 40px;
  border: 4px solid #dcdcdc;
  border-top: 4px solid #05a59d;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}
.actions-list__title {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  flex-wrap: wrap;
  font-size: clamp(1.2656rem, 1.1281rem + 0.6875vw, 1.9531rem);
}
@media only screen and (min-width: 48rem) {
  .actions-list__title {
    font-size: clamp(1.4238rem, 1.2203rem + 1.0175vw, 2.4413rem);
  }
}
.actions-list__title--text {
  white-space: nowrap;
}

@keyframes spin {
  0% {
    transform: translate(-50%, -50%) rotate(0deg);
  }
  100% {
    transform: translate(-50%, -50%) rotate(360deg);
  }
}
.date-group {
  display: grid;
  gap: 1rem;
}

/*

    Theme Name: ESA Permiting Policy Tracker
    Theme URI: https://policytracker.esassoc.com/
    Description: Version 1.0 of Permiting Policy Tracker
    Version: 1.0

*/
.filters {
  margin: 3rem 0 2rem 0;
}
.filters__wrapper {
  background-color: #fafafa;
  border-radius: 0.125rem;
  border: 1px solid #dcdcdc;
}
.filters__header {
  cursor: pointer;
  padding: 1rem;
}
@media only screen and (min-width: 48rem) {
  .filters__header {
    cursor: default;
  }
}
.filters__header-wrapper {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 0.5rem;
  width: 100%;
}
@media only screen and (min-width: 48rem) {
  .filters__header-wrapper {
    padding-bottom: 0.5rem;
    border-bottom: 1px solid #dcdcdc;
  }
}
.filters__header svg.caret {
  transition: transform 300ms ease;
}
@media only screen and (min-width: 48rem) {
  .filters__header svg.caret {
    display: none;
  }
}
.filters__header.open .filters__header-wrapper {
  padding-bottom: 0.5rem;
  border-bottom: 1px solid #dcdcdc;
}
.filters__header.open svg.caret {
  transform: rotate(180deg);
}
.filters__title {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  font-size: clamp(0.8888rem, 0.8665rem + 0.1113vw, 1rem);
  font-weight: 600;
  color: #000000;
}
.filters__title svg {
  width: 0.75rem;
  height: 0.75rem;
}
.filters__title svg path {
  fill: #f9a134;
}
.filters__body {
  width: 100%;
  padding: 1rem;
  padding-top: 0;
  interpolate-size: allow-keywords;
  transition: height 0.3s ease, overflow 0.3s ease 300ms;
}
.filters__body.closed {
  height: 0;
  overflow: hidden;
  padding: 0;
}
@media only screen and (min-width: 48rem) {
  .filters__body.closed {
    height: unset;
    overflow: unset;
    padding: 1rem;
    padding-top: 0;
  }
}
.filters__selects {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
  gap: 1rem;
}
.filters__clear {
  font-family: "Raleway", sans-serif;
  font-size: clamp(0.79rem, 0.788rem + 0.01vw, 0.8rem);
  font-weight: 600;
  color: #f9a134;
  background: #ffffff;
  border: 1px solid #f9a134;
  border-radius: 0.125rem;
  padding: 0.5rem 0.75rem;
  cursor: pointer;
  transition: all 0.2s ease;
}
.filters__clear:hover {
  background: #f9a134;
  color: #ffffff;
}
.filters__clear-wrapper {
  display: flex;
  justify-content: flex-end;
  width: 100%;
  padding-top: 1rem;
}
.filters select {
  padding: 0.5rem;
  border: 1px solid #dcdcdc;
  border-radius: 0.125rem;
  background-color: #ffffff;
  font-family: "Raleway", sans-serif;
  font-weight: 500;
  font-size: clamp(0.79rem, 0.788rem + 0.01vw, 0.8rem);
  color: #464646;
  cursor: pointer;
  width: 100%;
}
.filters select:focus {
  outline: none;
  border-color: #05a59d;
}
.filters input[type=text] {
  padding: 0.5rem;
  border: 1px solid #dcdcdc;
  border-radius: 0.125rem;
  background-color: #ffffff;
  font-family: "Raleway", sans-serif;
  font-weight: 500;
  font-size: clamp(0.79rem, 0.788rem + 0.01vw, 0.8rem);
  color: #464646;
  width: 100%;
}
.filters input[type=text]:focus {
  outline: none;
  border-color: #05a59d;
}
.filters .filter-detail.disabled label {
  color: #989898;
}
.filters .filter-detail label {
  display: block;
  padding-bottom: 0.5rem;
  font-family: "Raleway", sans-serif;
  font-size: 0.75rem;
  font-weight: bold;
  color: #000000;
  text-transform: uppercase;
  letter-spacing: 0.05em;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlLnNjc3MiLCJhYnN0cmFjdHMvX2ZvbnRzLnNjc3MiLCJiYXNlL19yZXNldC5zY3NzIiwic3R5bGUuY3NzIiwiYmFzZS9fYmFzZS5zY3NzIiwiYWJzdHJhY3RzL19jb2xvcnMuc2NzcyIsImJhc2UvX3R5cG9ncmFwaHkuc2NzcyIsImFic3RyYWN0cy9fdHlwZS1zaXplcy5zY3NzIiwiYWJzdHJhY3RzL19zcGFjaW5nLnNjc3MiLCJ1dGlsaXRpZXMvX2dyaWQuc2NzcyIsInV0aWxpdGllcy9fZmxleC5zY3NzIiwidXRpbGl0aWVzL19jb250ZW50LWdyaWQuc2NzcyIsImFic3RyYWN0cy9fbWVkaWEtcXVlcmllcy5zY3NzIiwidXRpbGl0aWVzL19mbG93LnNjc3MiLCJ1dGlsaXRpZXMvX2NvcHkuc2NzcyIsInV0aWxpdGllcy9fcGlsZS5zY3NzIiwiY29tcG9uZW50cy9oZWFkZXIvX2xvZ28uc2NzcyIsImNvbXBvbmVudHMvaGVhZGVyL19uYXYuc2NzcyIsImNvbXBvbmVudHMvaGVhZGVyL19tb2JpbGUtZHJhd2VyLnNjc3MiLCJjb21wb25lbnRzL2hlYWRlci9faGFtYnVyZ2VyLnNjc3MiLCJjb21wb25lbnRzL2hlYWRlci9faW5kZXguc2NzcyIsImNvbXBvbmVudHMvYWN0aW9uL19yZXNjaW5kZWQtcG9saWN5LnNjc3MiLCJjb21wb25lbnRzL2FjdGlvbi9faW5kZXguc2NzcyIsInRlbXBsYXRlcy9ob21lL19oZXJvLnNjc3MiLCJ0ZW1wbGF0ZXMvaG9tZS9fbGlzdC5zY3NzIiwidGVtcGxhdGVzL2hvbWUvX2ZpbHRlcnMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7OztDQUFBO0FDQVEsaU5BQUE7QUNBUixxQkFBQTtBQUNBOzs7RUFHSSxzQkFBQTtBQ1VKOztBRFBBLGdDQUFBO0FBQ0E7RUFDSSwyQkFBQTtFQUNBLDhCQUFBO0VBQ0Esc0JBQUE7QUNVSjs7QURQQSxzRUFBQTtBQUNBOzs7Ozs7Ozs7O0VBVUksU0FBQTtB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QUNJLFdBQUE7RUFDQSxhakJqRU07RWlCa0VOLGNBQUE7RUFDQSxnQ0FBQTtFQUNBLHNEQUFBO0F0Qmk2QlI7QXNCLzVCUTtFQUNJLFNBQUE7RUFDQSxnQkFBQTtFQUNBLFVBQUE7QXRCaTZCWjtBU3orQkk7RWFxRUk7SUFNUSxhQUFBO0lBQ0EsZUFBQTtJQUNBLGFqQjlFRjtJaUIrRUUsY0FBQTtFdEJrNkJkO0FBQ0Y7QXNCOTVCSTtFQUNJLGFBQUE7RUFDQSw0REFBQTtFQUNBLFNqQnZGTTtBTHUvQmQ7QXNCNzVCSTtFQUNJLGtDeEI5RkU7RXdCK0ZGLG9EbEI3RlE7RWtCOEZSLGdCQUFBO0VBQ0EsY3BCcEZDO0VvQnFGRCxtQnBCcEdDO0VvQnFHRCx5QkFBQTtFQUNBLHVCakJyR007RWlCc0dOLHVCQUFBO0VBQ0EsZUFBQTtFQUNBLHlCQUFBO0F0Qis1QlI7QXNCNzVCUTtFQUNJLG1CcEI3Rkg7RW9COEZHLGNwQjdHSDtBRjRnQ1Q7QXNCNTVCUTtFQUNJLGFBQUE7RUFDQSx5QkFBQTtFQUNBLFdBQUE7RUFDQSxpQmpCL0dFO0FMNmdDZDtBc0IxNUJJO0VBQ0ksZWpCdEhNO0VpQnVITix5QkFBQTtFQUNBLHVCakIxSE07RWlCMkhOLHlCcEI1SEM7RW9CNkhELGtDeEIzSEU7RXdCNEhGLGdCQUFBO0VBQ0Esb0RsQjNIUTtFa0I0SFIsY3BCdkhHO0VvQndISCxlQUFBO0VBQ0EsV0FBQTtBdEI0NUJSO0FzQjE1QlE7RUFDSSxhQUFBO0VBQ0EscUJwQnhITDtBRm9oQ1A7QXNCeDVCSTtFQUNJLGVqQnhJTTtFaUJ5SU4seUJBQUE7RUFDQSx1QmpCNUlNO0VpQjZJTix5QnBCOUlDO0VvQitJRCxrQ3hCN0lFO0V3QjhJRixnQkFBQTtFQUNBLG9EbEI3SVE7RWtCOElSLGNwQnpJRztFb0IwSUgsV0FBQTtBdEIwNUJSO0FzQng1QlE7RUFDSSxhQUFBO0VBQ0EscUJwQnpJTDtBRm1pQ1A7QXNCcDVCWTtFQUNJLGNwQnpKTDtBRitpQ1g7QXNCbjVCUTtFQUNJLGNBQUE7RUFDQSxzQmpCaEtFO0VpQmlLRixrQ3hCbEtGO0V3Qm1LRSxrQkFBQTtFQUNBLGlCQUFBO0VBQ0EsY3BCM0pBO0VvQjRKQSx5QkFBQTtFQUNBLHNCQUFBO0F0QnE1QloiLCJmaWxlIjoic3R5bGUuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLypcblxuICAgIFRoZW1lIE5hbWU6IEVTQSBQZXJtaXRpbmcgUG9saWN5IFRyYWNrZXJcbiAgICBUaGVtZSBVUkk6IGh0dHBzOi8vcG9saWN5dHJhY2tlci5lc2Fzc29jLmNvbS9cbiAgICBEZXNjcmlwdGlvbjogVmVyc2lvbiAxLjAgb2YgUGVybWl0aW5nIFBvbGljeSBUcmFja2VyXG4gICAgVmVyc2lvbjogMS4wXG5cbiovXG5cbkB1c2UgXCJhYnN0cmFjdHNcIjtcbkB1c2UgXCJiYXNlXCI7XG5AdXNlIFwidXRpbGl0aWVzXCI7XG5AdXNlIFwiY29tcG9uZW50c1wiO1xuQHVzZSBcInRlbXBsYXRlc1wiO1xuIiwiQGltcG9ydCB1cmwoXCJodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PU9sZCtTdGFuZGFyZCtUVDppdGFsLHdnaHRAMCw0MDA7MCw3MDA7MSw0MDAmZmFtaWx5PVBUK1NlcmlmOml0YWwsd2dodEAwLDQwMDswLDcwMDsxLDQwMDsxLDcwMCZmYW1pbHk9UmFsZXdheTppdGFsLHdnaHRAMCwxMDAuLjkwMDsxLDEwMC4uOTAwJmRpc3BsYXk9c3dhcFwiKTtcblxuJHJhbGV3YXk6IFwiUmFsZXdheVwiLCBzYW5zLXNlcmlmO1xuJG9sZC1zdGFuZGFyZDogXCJPbGQgU3RhbmRhcmQgVFRcIiwgc2VyaWY7XG4kcHQtc2VyaWY6IFwiUFQgU2VyaWZcIiwgc2VyaWY7XG4iLCIvKiBCb3ggc2l6aW5nIHJ1bGVzICovXG4qLFxuKjo6YmVmb3JlLFxuKjo6YWZ0ZXIge1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbi8qIFByZXZlbnQgZm9udCBzaXplIGluZmxhdGlvbiAqL1xuaHRtbCB7XG4gICAgLW1vei10ZXh0LXNpemUtYWRqdXN0OiBub25lO1xuICAgIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogbm9uZTtcbiAgICB0ZXh0LXNpemUtYWRqdXN0OiBub25lO1xufVxuXG4vKiBSZW1vdmUgZGVmYXVsdCBtYXJnaW4gaW4gZmF2b3VyIG9mIGJldHRlciBjb250cm9sIGluIGF1dGhvcmVkIENTUyAqL1xuYm9keSxcbmgxLFxuaDIsXG5oMyxcbmg0LFxucCxcbmZpZ3VyZSxcbmJsb2NrcXVvdGUsXG5kbCxcbmRkIHtcbiAgICBtYXJnaW46IDA7XG59XG5cbnVsLFxub2wge1xuICAgIG1hcmdpbi1ibG9jazogMDtcbn1cblxuLyogUmVtb3ZlIGxpc3Qgc3R5bGVzIG9uIHVsLCBvbCBlbGVtZW50cyB3aXRoIGEgbmF2IHJvbGUsIHdoaWNoIHN1Z2dlc3RzIGRlZmF1bHQgc3R5bGluZyB3aWxsIGJlIHJlbW92ZWQgKi9cbnVsW3JvbGU9XCJuYXZcIl0sXG5vbFtyb2xlPVwibmF2XCJdIHtcbiAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgIHBhZGRpbmc6IDA7XG59XG5cbi8qIFNldCBjb3JlIGJvZHkgZGVmYXVsdHMgKi9cbmJvZHkge1xuICAgIG1pbi1oZWlnaHQ6IDEwMHZoO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjU7XG59XG5cbi8qIFNldCBzaG9ydGVyIGxpbmUgaGVpZ2h0cyBvbiBoZWFkaW5ncyBhbmQgaW50ZXJhY3RpdmUgZWxlbWVudHMgKi9cbmgxLFxuaDIsXG5oMyxcbmg0LFxuYnV0dG9uLFxuaW5wdXQsXG5sYWJlbCB7XG4gICAgbGluZS1oZWlnaHQ6IDEuMTtcbn1cblxuLyogTWFrZSBpbWFnZXMgZWFzaWVyIHRvIHdvcmsgd2l0aCAqL1xuaW1nLFxucGljdHVyZSB7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGhlaWdodDogYXV0bztcbn1cblxuLyogSW5oZXJpdCBmb250cyBmb3IgaW5wdXRzIGFuZCBidXR0b25zICovXG5pbnB1dCxcbmJ1dHRvbixcbnRleHRhcmVhLFxuc2VsZWN0IHtcbiAgICBmb250OiBpbmhlcml0O1xufVxuXG4vKiBNYWtlIHN1cmUgdGV4dGFyZWFzIHdpdGhvdXQgYSByb3dzIGF0dHJpYnV0ZSBhcmUgbm90IHRpbnkgKi9cbnRleHRhcmVhOm5vdChbcm93c10pIHtcbiAgICBtaW4taGVpZ2h0OiAxMGVtO1xufVxuXG4vKiBBbnl0aGluZyB0aGF0IGhhcyBiZWVuIGFuY2hvcmVkIHRvIHNob3VsZCBoYXZlIGV4dHJhIHNjcm9sbCBtYXJnaW4gKi9cbjp0YXJnZXQge1xuICAgIHNjcm9sbC1tYXJnaW4tYmxvY2s6IDVleDtcbn1cblxudGltZSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG59XG4iLCIvKlxuXG4gICAgVGhlbWUgTmFtZTogRVNBIFBlcm1pdGluZyBQb2xpY3kgVHJhY2tlclxuICAgIFRoZW1lIFVSSTogaHR0cHM6Ly9wb2xpY3l0cmFja2VyLmVzYXNzb2MuY29tL1xuICAgIERlc2NyaXB0aW9uOiBWZXJzaW9uIDEuMCBvZiBQZXJtaXRpbmcgUG9saWN5IFRyYWNrZXJcbiAgICBWZXJzaW9uOiAxLjBcblxuKi9cbkBpbXBvcnQgdXJsKFwiaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1PbGQrU3RhbmRhcmQrVFQ6aXRhbCx3Z2h0QDAsNDAwOzAsNzAwOzEsNDAwJmZhbWlseT1QVCtTZXJpZjppdGFsLHdnaHRAMCw0MDA7MCw3MDA7MSw0MDA7MSw3MDAmZmFtaWx5PVJhbGV3YXk6aXRhbCx3Z2h0QDAsMTAwLi45MDA7MSwxMDAuLjkwMCZkaXNwbGF5PXN3YXBcIik7XG4vKiBCb3ggc2l6aW5nIHJ1bGVzICovXG4qLFxuKjo6YmVmb3JlLFxuKjo6YWZ0ZXIge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG4vKiBQcmV2ZW50IGZvbnQgc2l6ZSBpbmZsYXRpb24gKi9cbmh0bWwge1xuICAtbW96LXRleHQtc2l6ZS1hZGp1c3Q6IG5vbmU7XG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogbm9uZTtcbiAgdGV4dC1zaXplLWFkanVzdDogbm9uZTtcbn1cblxuLyogUmVtb3ZlIGRlZmF1bHQgbWFyZ2luIGluIGZhdm91ciBvZiBiZXR0ZXIgY29udHJvbCBpbiBhdXRob3JlZCBDU1MgKi9cbmJvZHksXG5oMSxcbmgyLFxuaDMsXG5oNCxcbnAsXG5maWd1cmUsXG5ibG9ja3F1b3RlLFxuZGwsXG5kZCB7XG4gIG1hcmdpbjogMDtcbn1cblxudWwsXG5vbCB7XG4gIG1hcmdpbi1ibG9jazogMDtcbn1cblxuLyogUmVtb3ZlIGxpc3Qgc3R5bGVzIG9uIHVsLCBvbCBlbGVtZW50cyB3aXRoIGEgbmF2IHJvbGUsIHdoaWNoIHN1Z2dlc3RzIGRlZmF1bHQgc3R5bGluZyB3aWxsIGJlIHJlbW92ZWQgKi9cbnVsW3JvbGU9bmF2XSxcbm9sW3JvbGU9bmF2XSB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qIFNldCBjb3JlIGJvZHkgZGVmYXVsdHMgKi9cbmJvZHkge1xuICBtaW4taGVpZ2h0OiAxMDB2aDtcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbn1cblxuLyogU2V0IHNob3J0ZXIgbGluZSBoZWlnaHRzIG9uIGhlYWRpbmdzIGFuZCBpbnRlcmFjdGl2ZSBlbGVtZW50cyAqL1xuaDEsXG5oMixcbmgzLFxuaDQsXG5idXR0b24sXG5pbnB1dCxcbmxhYmVsIHtcbiAgbGluZS1oZWlnaHQ6IDEuMTtcbn1cblxuLyogTWFrZSBpbWFnZXMgZWFzaWVyIHRvIHdvcmsgd2l0aCAqL1xuaW1nLFxucGljdHVyZSB7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLyogSW5oZXJpdCBmb250cyBmb3IgaW5wdXRzIGFuZCBidXR0b25zICovXG5pbnB1dCxcbmJ1dHRvbixcbnRleHRhcmVhLFxuc2VsZWN0IHtcbiAgZm9udDogaW5oZXJpdDtcbn1cblxuLyogTWFrZSBzdXJlIHRleHRhcmVhcyB3aXRob3V0IGEgcm93cyBhdHRyaWJ1dGUgYXJlIG5vdCB0aW55ICovXG50ZXh0YXJlYTpub3QoW3Jvd3NdKSB7XG4gIG1pbi1oZWlnaHQ6IDEwZW07XG59XG5cbi8qIEFueXRoaW5nIHRoYXQgaGFzIGJlZW4gYW5jaG9yZWQgdG8gc2hvdWxkIGhhdmUgZXh0cmEgc2Nyb2xsIG1hcmdpbiAqL1xuOnRhcmdldCB7XG4gIHNjcm9sbC1tYXJnaW4tYmxvY2s6IDVleDtcbn1cblxudGltZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKlxuXG4gICAgVGhlbWUgTmFtZTogRVNBIFBlcm1pdGluZyBQb2xpY3kgVHJhY2tlclxuICAgIFRoZW1lIFVSSTogaHR0cHM6Ly9wb2xpY3l0cmFja2VyLmVzYXNzb2MuY29tL1xuICAgIERlc2NyaXB0aW9uOiBWZXJzaW9uIDEuMCBvZiBQZXJtaXRpbmcgUG9saWN5IFRyYWNrZXJcbiAgICBWZXJzaW9uOiAxLjBcblxuKi9cbmh0bWwge1xuICBzY3JvbGwtYmVoYXZpb3I6IHNtb290aDtcbn1cblxuYm9keSB7XG4gIGJhY2tncm91bmQ6ICNmZmZmZmY7XG59XG5cbi5zaXRlIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ2FwOiAwO1xuICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG8gMWZyIGF1dG87XG4gIG1pbi1oZWlnaHQ6IDEwMHZoO1xufVxuXG4vKlxuXG4gICAgVGhlbWUgTmFtZTogRVNBIFBlcm1pdGluZyBQb2xpY3kgVHJhY2tlclxuICAgIFRoZW1lIFVSSTogaHR0cHM6Ly9wb2xpY3l0cmFja2VyLmVzYXNzb2MuY29tL1xuICAgIERlc2NyaXB0aW9uOiBWZXJzaW9uIDEuMCBvZiBQZXJtaXRpbmcgUG9saWN5IFRyYWNrZXJcbiAgICBWZXJzaW9uOiAxLjBcblxuKi9cbmJvZHksXG5idXR0b24sXG5pbnB1dCxcbnNlbGVjdCxcbm9wdGdyb3VwLFxudGV4dGFyZWEge1xuICBmb250LWZhbWlseTogXCJSYWxld2F5XCIsIHNhbnMtc2VyaWY7XG59XG5cbmEge1xuICBjb2xvcjogIzAwMDAwMDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG46Oi1tb3otc2VsZWN0aW9uIHtcbiAgYmFja2dyb3VuZDogIzA1YTU5ZDtcbiAgdGV4dC1zaGFkb3c6IG5vbmU7XG59XG5cbjo6c2VsZWN0aW9uIHtcbiAgYmFja2dyb3VuZDogIzA1YTU5ZDtcbiAgY29sb3I6IHdoaXRlO1xuICB0ZXh0LXNoYWRvdzogbm9uZTtcbn1cblxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2IHtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbn1cblxuLnN1Yi1oZWFkZXIge1xuICBmb250LXNpemU6IGNsYW1wKDAuNzlyZW0sIDAuNzg4cmVtICsgMC4wMXZ3LCAwLjhyZW0pO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBsZXR0ZXItc3BhY2luZzogMC4xZW07XG4gIGNvbG9yOiAjMDVhNTlkO1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLmFuYWx5c2lzLWhlYWRlciB7XG4gIGZvbnQtc2l6ZTogY2xhbXAoMC44ODg4cmVtLCAwLjg2NjVyZW0gKyAwLjExMTN2dywgMXJlbSk7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4uYmFkZ2Uge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGZvbnQtZmFtaWx5OiBcIlJhbGV3YXlcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAwLjYxMjVyZW07XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGxldHRlci1zcGFjaW5nOiAwLjFlbTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmYWZhZmE7XG4gIGJvcmRlci1yYWRpdXM6IDAuMTI1cmVtO1xuICBib3JkZXI6IDFweCBzb2xpZCAjZGNkY2RjO1xuICBsaW5lLWhlaWdodDogMTtcbiAgcGFkZGluZzogNnB4IDAuNXJlbSA0cHg7XG59XG4uYmFkZ2UuZGFyayB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM0NjQ2NDY7XG4gIGJvcmRlci1jb2xvcjogIzQ2NDY0NjtcbiAgY29sb3I6ICNmZmZmZmY7XG59XG5cbi5zdGF0dXMge1xuICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZ2FwOiAwLjI1cmVtO1xuICBmb250LWZhbWlseTogXCJSYWxld2F5XCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMC42MTI1cmVtO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBsZXR0ZXItc3BhY2luZzogMC4xZW07XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBib3JkZXI6IDFweCBzb2xpZCAjZGNkY2RjO1xuICBsaW5lLWhlaWdodDogMTtcbiAgcGFkZGluZzogNnB4IDAuNXJlbSA0cHg7XG59XG4uc3RhdHVzX19pbmRpY2F0YXRvciB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgd2lkdGg6IDVweDtcbiAgaGVpZ2h0OiA1cHg7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbn1cblxuLypcblxuICAgIFRoZW1lIE5hbWU6IEVTQSBQZXJtaXRpbmcgUG9saWN5IFRyYWNrZXJcbiAgICBUaGVtZSBVUkk6IGh0dHBzOi8vcG9saWN5dHJhY2tlci5lc2Fzc29jLmNvbS9cbiAgICBEZXNjcmlwdGlvbjogVmVyc2lvbiAxLjAgb2YgUGVybWl0aW5nIFBvbGljeSBUcmFja2VyXG4gICAgVmVyc2lvbjogMS4wXG5cbiovXG4uZ3JpZCB7XG4gIGRpc3BsYXk6IGdyaWQ7XG59XG5cbi5mbGV4IHtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuLmp1c3RpZnktc3RhcnQge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG59XG5cbi5qdXN0aWZ5LWNlbnRlciB7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4uanVzdGlmeS1iZXR3ZWVuIHtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xufVxuXG4uanVzdGlmeS1lbmQge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xufVxuXG4uaXRlbXMtc3RhcnQge1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbn1cblxuLml0ZW1zLWNlbnRlciB7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5pdGVtcy1lbmQge1xuICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG59XG5cbi5pdGVtcy1zdHJldGNoIHtcbiAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7XG59XG5cbi5wbGFjZS1jZW50ZXIge1xuICBwbGFjZS1jb250ZW50OiBjZW50ZXI7XG59XG5cbi8qXG5cbiAgICBUaGVtZSBOYW1lOiBFU0EgUGVybWl0aW5nIFBvbGljeSBUcmFja2VyXG4gICAgVGhlbWUgVVJJOiBodHRwczovL3BvbGljeXRyYWNrZXIuZXNhc3NvYy5jb20vXG4gICAgRGVzY3JpcHRpb246IFZlcnNpb24gMS4wIG9mIFBlcm1pdGluZyBQb2xpY3kgVHJhY2tlclxuICAgIFZlcnNpb246IDEuMFxuXG4qL1xuLmNvbnRlbnQtZ3JpZCB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdhcDogMnJlbTtcbiAgYWxpZ24taXRlbXM6IHN0YXJ0O1xuICBhbGlnbi1jb250ZW50OiBzdGFydDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiBbZnVsbC13aWR0aC1zdGFydF0gbWlubWF4KDAsIGF1dG8pIFtjb250ZW50LXN0YXJ0XSByZXBlYXQoNCwgbWlubWF4KGF1dG8sIDFmcikpIFtjb250ZW50LWVuZF0gbWlubWF4KDAsIGF1dG8pIFtmdWxsLXdpZHRoLWVuZF07XG59XG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDMwcmVtKSB7XG4gIC5jb250ZW50LWdyaWQge1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogW2Z1bGwtd2lkdGgtc3RhcnRdIG1pbm1heCgwLCBhdXRvKSBbY29udGVudC1zdGFydF0gcmVwZWF0KDgsIG1pbm1heChhdXRvLCAxZnIpKSBbY29udGVudC1lbmRdIG1pbm1heCgwLCBhdXRvKSBbZnVsbC13aWR0aC1lbmRdO1xuICB9XG59XG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDYycmVtKSB7XG4gIC5jb250ZW50LWdyaWQge1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogW2Z1bGwtd2lkdGgtc3RhcnRdIG1pbm1heCgwLCBhdXRvKSBbY29udGVudC1zdGFydF0gcmVwZWF0KDMsIG1pbm1heCgwLCA0LjVyZW0pKSBbbmFycm93LXN0YXJ0XSByZXBlYXQoNiwgbWlubWF4KDAsIDQuNXJlbSkpIFtuYXJyb3ctZW5kXSByZXBlYXQoMywgbWlubWF4KDAsIDQuNXJlbSkpIFtjb250ZW50LWVuZF0gbWlubWF4KDAsIGF1dG8pIFtmdWxsLXdpZHRoLWVuZF07XG4gIH1cbn1cbi5jb250ZW50LWdyaWQgPiAqIHtcbiAgZ3JpZC1jb2x1bW46IGNvbnRlbnQ7XG59XG5cbi5mbG93ID4gKiArICoge1xuICBtYXJnaW4tYmxvY2stc3RhcnQ6IHZhcigtLWZsb3ctc3BhY2VyLCAxcmVtKTtcbn1cblxuLypcblxuICAgIFRoZW1lIE5hbWU6IEVTQSBQZXJtaXRpbmcgUG9saWN5IFRyYWNrZXJcbiAgICBUaGVtZSBVUkk6IGh0dHBzOi8vcG9saWN5dHJhY2tlci5lc2Fzc29jLmNvbS9cbiAgICBEZXNjcmlwdGlvbjogVmVyc2lvbiAxLjAgb2YgUGVybWl0aW5nIFBvbGljeSBUcmFja2VyXG4gICAgVmVyc2lvbjogMS4wXG5cbiovXG4uY29weS0xIHtcbiAgZm9udC1zaXplOiBjbGFtcCgxcmVtLCAwLjk1cmVtICsgMC4yNXZ3LCAxLjI1cmVtKTtcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbn1cblxuLmNvcHktMiB7XG4gIGZvbnQtc2l6ZTogY2xhbXAoMC44ODg4cmVtLCAwLjg2NjVyZW0gKyAwLjExMTN2dywgMXJlbSk7XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG59XG5cbi5jb3B5LTMge1xuICBmb250LXNpemU6IGNsYW1wKDAuNzlyZW0sIDAuNzg4cmVtICsgMC4wMXZ3LCAwLjhyZW0pO1xuICBsaW5lLWhlaWdodDogMS41O1xufVxuXG4uY29weSBhIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG59XG5cbi5waWxlIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG4ucGlsZSA+ICoge1xuICBncmlkLWNvbHVtbjogMTtcbiAgZ3JpZC1yb3c6IDE7XG59XG5cbi8qXG5cbiAgICBUaGVtZSBOYW1lOiBFU0EgUGVybWl0aW5nIFBvbGljeSBUcmFja2VyXG4gICAgVGhlbWUgVVJJOiBodHRwczovL3BvbGljeXRyYWNrZXIuZXNhc3NvYy5jb20vXG4gICAgRGVzY3JpcHRpb246IFZlcnNpb24gMS4wIG9mIFBlcm1pdGluZyBQb2xpY3kgVHJhY2tlclxuICAgIFZlcnNpb246IDEuMFxuXG4qL1xuLypcblxuICAgIFRoZW1lIE5hbWU6IEVTQSBQZXJtaXRpbmcgUG9saWN5IFRyYWNrZXJcbiAgICBUaGVtZSBVUkk6IGh0dHBzOi8vcG9saWN5dHJhY2tlci5lc2Fzc29jLmNvbS9cbiAgICBEZXNjcmlwdGlvbjogVmVyc2lvbiAxLjAgb2YgUGVybWl0aW5nIFBvbGljeSBUcmFja2VyXG4gICAgVmVyc2lvbjogMS4wXG5cbiovXG4uc2l0ZS1sb2dvX19saW5rIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuICBnYXA6IDFyZW07XG59XG4uc2l0ZS1sb2dvX19pbWFnZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogNHJlbTtcbn1cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjJyZW0pIHtcbiAgLnNpdGUtbG9nb19faW1hZ2Uge1xuICAgIHdpZHRoOiA2LjVyZW07XG4gIH1cbn1cbi5zaXRlLWxvZ29fX2ltYWdlIGltZyB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4vKlxuXG4gICAgVGhlbWUgTmFtZTogRVNBIFBlcm1pdGluZyBQb2xpY3kgVHJhY2tlclxuICAgIFRoZW1lIFVSSTogaHR0cHM6Ly9wb2xpY3l0cmFja2VyLmVzYXNzb2MuY29tL1xuICAgIERlc2NyaXB0aW9uOiBWZXJzaW9uIDEuMCBvZiBQZXJtaXRpbmcgUG9saWN5IFRyYWNrZXJcbiAgICBWZXJzaW9uOiAxLjBcblxuKi9cbi5zaXRlLW5hdl9fZGVza3RvcCB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDYycmVtKSB7XG4gIC5zaXRlLW5hdl9fZGVza3RvcCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGdhcDogMnJlbTtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICB9XG59XG4uc2l0ZS1uYXZfX2Rlc2t0b3AtaXRlbSB7XG4gIHBhZGRpbmc6IDAuMjVyZW0gMDtcbn1cbi5zaXRlLW5hdl9fZGVza3RvcC1saW5rIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBmb250LXNpemU6IDAuODc1cmVtO1xuICBib3JkZXItYm90dG9tOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XG4gIHRyYW5zaXRpb246IGFsbCAzMDBtcyBlYXNlO1xuICBmb250LXdlaWdodDogNjAwO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBsZXR0ZXItc3BhY2luZzogMC4wNWVtO1xuICBjb2xvcjogIzI5MjkyOTtcbn1cbi5zaXRlLW5hdl9fZGVza3RvcC1saW5rOmhvdmVyLCAuc2l0ZS1uYXZfX2Rlc2t0b3AtbGluay5hY3RpdmUge1xuICBib3JkZXItY29sb3I6ICMwNWE1OWQ7XG59XG4uc2l0ZS1uYXZfX21vYmlsZSB7XG4gIHBhZGRpbmc6IDJyZW07XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdhcDogMnJlbTtcbiAgYWxpZ24tc2VsZjogc3RhcnQ7XG59XG4uc2l0ZS1uYXZfX21vYmlsZS1pdGVtIHtcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG59XG4uc2l0ZS1uYXZfX21vYmlsZS1saW5rIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBmb250LXNpemU6IGNsYW1wKDFyZW0sIDAuOTVyZW0gKyAwLjI1dncsIDEuMjVyZW0pO1xuICB0cmFuc2l0aW9uOiBhbGwgMTUwbXMgZWFzZTtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbn1cblxuLypcblxuICAgIFRoZW1lIE5hbWU6IEVTQSBQZXJtaXRpbmcgUG9saWN5IFRyYWNrZXJcbiAgICBUaGVtZSBVUkk6IGh0dHBzOi8vcG9saWN5dHJhY2tlci5lc2Fzc29jLmNvbS9cbiAgICBEZXNjcmlwdGlvbjogVmVyc2lvbiAxLjAgb2YgUGVybWl0aW5nIFBvbGljeSBUcmFja2VyXG4gICAgVmVyc2lvbjogMS4wXG5cbiovXG4jbW9iaWxlLWRyYXdlciB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAtMTAwJTtcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgd2lkdGg6IDc1JTtcbiAgei1pbmRleDogOTk5O1xuICBjb2xvcjogI2ZmZmZmZjtcbiAgYm94LXNoYWRvdzogMnB4IDAgNXB4IHJnYmEoMCwgMCwgMCwgMC4yKTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMDAlKTtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZS1pbi1vdXQ7XG4gIGJhY2tncm91bmQ6ICMyOTI5Mjk7XG59XG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDQ4cmVtKSB7XG4gICNtb2JpbGUtZHJhd2VyIHtcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG4gIH1cbn1cbiNtb2JpbGUtZHJhd2VyLmlzLW9wZW4ge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gIGxlZnQ6IDA7XG59XG5cbi8qXG5cbiAgICBUaGVtZSBOYW1lOiBFU0EgUGVybWl0aW5nIFBvbGljeSBUcmFja2VyXG4gICAgVGhlbWUgVVJJOiBodHRwczovL3BvbGljeXRyYWNrZXIuZXNhc3NvYy5jb20vXG4gICAgRGVzY3JpcHRpb246IFZlcnNpb24gMS4wIG9mIFBlcm1pdGluZyBQb2xpY3kgVHJhY2tlclxuICAgIFZlcnNpb246IDEuMFxuXG4qL1xuLm92ZXJsYXkge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwdmg7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICBvcGFjaXR5OiAwO1xuICB2aXNpYmlsaXR5OiBoaWRkZW47XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcyBlYXNlLWluLW91dDtcbiAgei1pbmRleDogOTk4O1xufVxuLm92ZXJsYXkuaXMtdmlzaWJsZSB7XG4gIG9wYWNpdHk6IDE7XG4gIHZpc2liaWxpdHk6IHZpc2libGU7XG59XG5cbi5oYW1idXJnZXIge1xuICBkaXNwbGF5OiBncmlkO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGVuZDtcbn1cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNDhyZW0pIHtcbiAgLmhhbWJ1cmdlciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB9XG59XG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDYycmVtKSB7XG4gIC5oYW1idXJnZXIge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbn1cbi5oYW1idXJnZXJfX2xpbmsge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuLmhhbWJ1cmdlcl9fYnVucyB7XG4gIHdpZHRoOiAycmVtO1xuICBoZWlnaHQ6IDIycHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbn1cbi5oYW1idXJnZXJfX3BhdHR5IHtcbiAgd2lkdGg6IDJyZW07XG4gIGhlaWdodDogMnB4O1xuICBiYWNrZ3JvdW5kOiAjN2M3YzdjO1xuICB0cmFuc2l0aW9uOiBhbGwgMC4ycztcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuLmhhbWJ1cmdlcl9fcGF0dHk6YWZ0ZXIsIC5oYW1idXJnZXJfX3BhdHR5OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMnJlbTtcbiAgaGVpZ2h0OiAycHg7XG4gIGJhY2tncm91bmQ6ICM3YzdjN2M7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogMTtcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnM7XG59XG4uaGFtYnVyZ2VyX19wYXR0eTpiZWZvcmUge1xuICB0b3A6IC02cHg7XG59XG4uaGFtYnVyZ2VyX19wYXR0eTphZnRlciB7XG4gIHRvcDogNnB4O1xufVxuLmhhbWJ1cmdlci5uYXYtb3BlbiAuaGFtYnVyZ2VyX19wYXR0eSB7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xufVxuLmhhbWJ1cmdlci5uYXYtb3BlbiAuaGFtYnVyZ2VyX19wYXR0eTo6YmVmb3JlIHtcbiAgcm90YXRlOiA0NWRlZztcbiAgdG9wOiAwO1xufVxuLmhhbWJ1cmdlci5uYXYtb3BlbiAuaGFtYnVyZ2VyX19wYXR0eTo6YWZ0ZXIge1xuICByb3RhdGU6IC00NWRlZztcbiAgdG9wOiAwO1xufVxuXG4uc2l0ZS1oZWFkZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xuICBwYWRkaW5nOiAxLjVyZW0gMDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAxMDAwO1xufVxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2MnJlbSkge1xuICAuc2l0ZS1oZWFkZXIge1xuICAgIHBhZGRpbmc6IDJyZW0gMDtcbiAgfVxufVxuLnNpdGUtaGVhZGVyX193cmFwcGVyIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiBhdXRvIDFmcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLypcblxuICAgIFRoZW1lIE5hbWU6IEVTQSBQZXJtaXRpbmcgUG9saWN5IFRyYWNrZXJcbiAgICBUaGVtZSBVUkk6IGh0dHBzOi8vcG9saWN5dHJhY2tlci5lc2Fzc29jLmNvbS9cbiAgICBEZXNjcmlwdGlvbjogVmVyc2lvbiAxLjAgb2YgUGVybWl0aW5nIFBvbGljeSBUcmFja2VyXG4gICAgVmVyc2lvbjogMS4wXG5cbiovXG4vKlxuXG4gICAgVGhlbWUgTmFtZTogRVNBIFBlcm1pdGluZyBQb2xpY3kgVHJhY2tlclxuICAgIFRoZW1lIFVSSTogaHR0cHM6Ly9wb2xpY3l0cmFja2VyLmVzYXNzb2MuY29tL1xuICAgIERlc2NyaXB0aW9uOiBWZXJzaW9uIDEuMCBvZiBQZXJtaXRpbmcgUG9saWN5IFRyYWNrZXJcbiAgICBWZXJzaW9uOiAxLjBcblxuKi9cbi8qXG5cbiAgICBUaGVtZSBOYW1lOiBFU0EgUGVybWl0aW5nIFBvbGljeSBUcmFja2VyXG4gICAgVGhlbWUgVVJJOiBodHRwczovL3BvbGljeXRyYWNrZXIuZXNhc3NvYy5jb20vXG4gICAgRGVzY3JpcHRpb246IFZlcnNpb24gMS4wIG9mIFBlcm1pdGluZyBQb2xpY3kgVHJhY2tlclxuICAgIFZlcnNpb246IDEuMFxuXG4qL1xuLnJlc2NpbmRlZC1wb2xpY3kge1xuICBtYXJnaW4tdG9wOiAwLjVyZW07XG4gIGJhY2tncm91bmQ6ICNmZmZmZmY7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNkY2RjZGM7XG4gIGJvcmRlci1yYWRpdXM6IDAuMTI1cmVtO1xufVxuLnJlc2NpbmRlZC1wb2xpY3lfX2hlYWRlciB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIGF1dG87XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGdhcDogMC41cmVtO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHBhZGRpbmc6IDFyZW07XG59XG4ucmVzY2luZGVkLXBvbGljeV9faGVhZGVyIHN2Zy5jYXJldCBwYXRoIHtcbiAgZmlsbDogI2MxMjcyZDtcbn1cbi5yZXNjaW5kZWQtcG9saWN5X19oZWFkZXIub3BlbiBzdmcuY2FyZXQge1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xufVxuLnJlc2NpbmRlZC1wb2xpY3lfX3RpdGxlIHtcbiAgZm9udC1zaXplOiBjbGFtcCgwLjc5cmVtLCAwLjc4OHJlbSArIDAuMDF2dywgMC44cmVtKTtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAwLjc1cmVtIDFmcjtcbiAgYWxpZ24taXRlbXM6IHN0YXJ0O1xuICBnYXA6IDAuNXJlbTtcbn1cbi5yZXNjaW5kZWQtcG9saWN5X190aXRsZSBzdmcge1xuICB3aWR0aDogMC43NXJlbTtcbiAgaGVpZ2h0OiAwLjc1cmVtO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMXB4KTtcbn1cbi5yZXNjaW5kZWQtcG9saWN5X190aXRsZSBzdmcgcGF0aCB7XG4gIGZpbGw6ICNjMTI3MmQ7XG59XG4ucmVzY2luZGVkLXBvbGljeV9fYm9keSB7XG4gIGludGVycG9sYXRlLXNpemU6IGFsbG93LWtleXdvcmRzO1xuICB0cmFuc2l0aW9uOiBoZWlnaHQgMC4zcyBlYXNlLCBwYWRkaW5nIDAuM3MgZWFzZSwgb3ZlcmZsb3cgMC4zcyBlYXNlIDMwMG1zO1xuICBoZWlnaHQ6IDA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG4ucmVzY2luZGVkLXBvbGljeV9fYm9keS5vcGVuIHtcbiAgaGVpZ2h0OiBhdXRvO1xuICBvdmVyZmxvdzogdW5zZXQ7XG59XG4ucmVzY2luZGVkLXBvbGljeV9fZGVzY3JpcHRpb24ge1xuICBwYWRkaW5nOiAwIDFyZW0gMXJlbSAxcmVtO1xufVxuLnJlc2NpbmRlZC1wb2xpY3lfX2xpbmsge1xuICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZ2FwOiAwLjI1cmVtO1xuICBjb2xvcjogI2MxMjcyZDtcbn1cbi5yZXNjaW5kZWQtcG9saWN5X19saW5rIHN2ZyBwYXRoIHtcbiAgZmlsbDogI2MxMjcyZDtcbn1cbi5yZXNjaW5kZWQtcG9saWN5X19mb290ZXIge1xuICBwYWRkaW5nOiAwIDFyZW0gMXJlbSAxcmVtO1xufVxuLnJlc2NpbmRlZC1wb2xpY3lfX2Zvb3RlciBoNCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4uYWN0aW9uIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgYWxpZ24taXRlbXM6IHN0YXJ0O1xuICBwYWRkaW5nOiAwLjc1cmVtO1xuICBib3JkZXItcmFkaXVzOiAwLjEyNXJlbTtcbiAgYm9yZGVyOiAxcHggc29saWQgI2RjZGNkYztcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbiAgYm94LXNoYWRvdzogMCA0cHggOHB4IDAgcmdiYSgwLCAwLCAwLCAwLjA1KTtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbn1cbi5hY3Rpb246aG92ZXIge1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG4uYWN0aW9uX19oZWFkZXIge1xuICBkaXNwbGF5OiBncmlkO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciBhdXRvO1xuICBnYXA6IDAuNzVyZW07XG59XG4uYWN0aW9uX19oZWFkZXIgc3ZnIHtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3MgZWFzZTtcbn1cbi5hY3Rpb25fX2RhdGUge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHBhZGRpbmctYm90dG9tOiAwLjI1cmVtO1xufVxuLmFjdGlvbl9fdGl0bGUge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGdhcDogMC41cmVtIDAuNzVyZW07XG59XG4uYWN0aW9uX190aXRsZS10ZXh0IHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGxpbmUtaGVpZ2h0OiAxLjE7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGxldHRlci1zcGFjaW5nOiAtMC4wMjVlbTtcbiAgZm9udC1zaXplOiAxcmVtO1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xufVxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA0OHJlbSkge1xuICAuYWN0aW9uX190aXRsZS10ZXh0IHtcbiAgICBmb250LXNpemU6IDEuMTI1cmVtO1xuICB9XG59XG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDQ4cmVtKSB7XG4gIC5hY3Rpb24ub3BlbiB7XG4gICAgcGFkZGluZzogMS41cmVtIDEuNXJlbTtcbiAgfVxufVxuLmFjdGlvbi5vcGVuIC5hY3Rpb25fX2hlYWRlciBzdmcge1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xufVxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA0OHJlbSkge1xuICAuYWN0aW9uLm9wZW4gLmFjdGlvbl9fdGl0bGUtdGV4dCB7XG4gICAgZm9udC1zaXplOiAxLjM3NXJlbTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gIH1cbn1cbi5hY3Rpb24ub3BlbiAuYWN0aW9uX19ib2R5IHtcbiAgaGVpZ2h0OiBhdXRvO1xuICBjdXJzb3I6IGRlZmF1bHQ7XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuLmFjdGlvbi5vcGVuIC5hY3Rpb25fX2Zvb3RlciB7XG4gIGN1cnNvcjogZGVmYXVsdDtcbn1cbi5hY3Rpb25fX2JvZHkge1xuICBoZWlnaHQ6IDA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGludGVycG9sYXRlLXNpemU6IGFsbG93LWtleXdvcmRzO1xuICB0cmFuc2l0aW9uOiBoZWlnaHQgMC4zcyBlYXNlLCBvdmVyZmxvdyAwLjNzIGVhc2UgMzAwbXM7XG59XG4uYWN0aW9uX19ib2R5LXdyYXBwZXIge1xuICBkaXNwbGF5OiBncmlkO1xuICBnYXA6IDEuNXJlbSAycmVtO1xuICBhbGlnbi1pdGVtczogc3RhcnQ7XG4gIHBhZGRpbmc6IDEuNXJlbSAwO1xuICBib3JkZXItdG9wOiAxcHggc29saWQgI2VmZWZlZjtcbiAgbWFyZ2luLXRvcDogMC43NXJlbTtcbn1cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNDhyZW0pIHtcbiAgLmFjdGlvbl9fYm9keS13cmFwcGVyIHtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgyLCBtaW5tYXgoMCwgMWZyKSk7XG4gIH1cbn1cbi5hY3Rpb25fX2RldGFpbHMge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgyLCBtaW5tYXgoMCwgMWZyKSk7XG4gIGdhcDogMS41cmVtIDJyZW07XG59XG4uYWN0aW9uX19kZXRhaWxzIC50d28tY29sIHtcbiAgZ3JpZC1jb2x1bW46IHNwYW4gMjtcbn1cbi5hY3Rpb25fX2RldGFpbCAuc3ViLWhlYWRlciB7XG4gIHBhZGRpbmctYm90dG9tOiAwLjEyNXJlbTtcbn1cbi5hY3Rpb25fX2FuYWx5c2lzIHtcbiAgYmFja2dyb3VuZDogI2ZhZmFmYTtcbiAgYm9yZGVyOiAxcHggc29saWQgI2RjZGNkYztcbiAgYm9yZGVyLXJhZGl1czogMC4xMjVyZW07XG4gIHBhZGRpbmc6IDFyZW07XG59XG4uYWN0aW9uX19hbmFseXNpcy1oZWFkZXIge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHBhZGRpbmctYm90dG9tOiAwLjc1cmVtO1xufVxuLmFjdGlvbl9fYW5hbHlzaXMtbGlzdCB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdhcDogMnJlbTtcbiAgYWxpZ24taXRlbXM6IHN0YXJ0O1xufVxuLmFjdGlvbl9fYW5hbHlzaXMgLmFuYWx5c2lzLWhlYWRlciB7XG4gIHBhZGRpbmctYm90dG9tOiAwLjI1cmVtO1xufVxuLmFjdGlvbl9fbGluayB7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZ2FwOiAwLjVyZW07XG59XG4uYWN0aW9uX192YWx1ZSB7XG4gIGxpbmUtaGVpZ2h0OiAxLjI7XG59XG4uYWN0aW9uX19mb290ZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICBwYWRkaW5nLXRvcDogMS41cmVtO1xuICBib3JkZXItdG9wOiAxcHggc29saWQgI2RjZGNkYztcbn1cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNDhyZW0pIHtcbiAgLmFjdGlvbl9fZm9vdGVyIHtcbiAgICBwYWRkaW5nLXRvcDogMC43NXJlbTtcbiAgfVxufVxuLmFjdGlvbl9fZm9vdGVyLWRhdGUge1xuICBmb250LXNpemU6IGNsYW1wKDAuNzlyZW0sIDAuNzg4cmVtICsgMC4wMXZ3LCAwLjhyZW0pO1xuICBjb2xvcjogIzdjN2M3YztcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG4vKlxuXG4gICAgVGhlbWUgTmFtZTogRVNBIFBlcm1pdGluZyBQb2xpY3kgVHJhY2tlclxuICAgIFRoZW1lIFVSSTogaHR0cHM6Ly9wb2xpY3l0cmFja2VyLmVzYXNzb2MuY29tL1xuICAgIERlc2NyaXB0aW9uOiBWZXJzaW9uIDEuMCBvZiBQZXJtaXRpbmcgUG9saWN5IFRyYWNrZXJcbiAgICBWZXJzaW9uOiAxLjBcblxuKi9cbi5oZXJvIHtcbiAgbWFyZ2luLWJvdHRvbTogMnJlbTtcbn1cbi5oZXJvX19waG90byB7XG4gIGdyaWQtY29sdW1uOiAxLy0xO1xuICBncmlkLXJvdzogMS9zcGFuIDI7XG4gIHotaW5kZXg6IDE7XG4gIGFzcGVjdC1yYXRpbzogMTYvNjtcbn1cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNDhyZW0pIHtcbiAgLmhlcm9fX3Bob3RvIHtcbiAgICBhc3BlY3QtcmF0aW86IDE2LzQ7XG4gIH1cbn1cbi5oZXJvX19waG90byBpbWcge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBvYmplY3QtZml0OiBjb3Zlcjtcbn1cbi5oZXJvX19pbmZvIHtcbiAgYWxpZ24tc2VsZjogZW5kO1xuICBncmlkLXJvdzogMi9zcGFuIDI7XG4gIHotaW5kZXg6IDI7XG4gIHBhZGRpbmc6IDEuNXJlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbiAgYm9yZGVyLXJhZGl1czogMC4xMjVyZW07XG4gIGJvcmRlcjogMXB4IHNvbGlkICNkY2RjZGM7XG4gIGdyaWQtY29sdW1uOiAyL3NwYW4gNDtcbiAgYm94LXNoYWRvdzogMHB4IDQ5cHggMzBweCAwcHggcmdiYSgwLCAwLCAwLCAwLjA1KSwgMHB4IDIycHggMjJweCAwcHggcmdiYSgwLCAwLCAwLCAwLjA5KSwgMHB4IDVweCAxMnB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMSksIDBweCA4OHB4IDM1cHggMHB4IHJnYmEoMCwgMCwgMCwgMC4wMSksIDBweCAxMzdweCAzOHB4IDBweCByZ2JhKDAsIDAsIDAsIDApO1xufVxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAzMHJlbSkge1xuICAuaGVyb19faW5mbyB7XG4gICAgZ3JpZC1jb2x1bW46IDIvc3BhbiA2O1xuICB9XG59XG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDYycmVtKSB7XG4gIC5oZXJvX19pbmZvIHtcbiAgICBncmlkLWNvbHVtbjogMi9zcGFuIDg7XG4gIH1cbn1cbi5oZXJvX19oZWFkbGluZSB7XG4gIGNvbG9yOiAjMDVhNTlkO1xuICBmb250LXNpemU6IGNsYW1wKDEuMjY1NnJlbSwgMS4xMjgxcmVtICsgMC42ODc1dncsIDEuOTUzMXJlbSk7XG4gIHBhZGRpbmctYm90dG9tOiAwLjVyZW07XG59XG5cbi8qXG5cbiAgICBUaGVtZSBOYW1lOiBFU0EgUGVybWl0aW5nIFBvbGljeSBUcmFja2VyXG4gICAgVGhlbWUgVVJJOiBodHRwczovL3BvbGljeXRyYWNrZXIuZXNhc3NvYy5jb20vXG4gICAgRGVzY3JpcHRpb246IFZlcnNpb24gMS4wIG9mIFBlcm1pdGluZyBQb2xpY3kgVHJhY2tlclxuICAgIFZlcnNpb246IDEuMFxuXG4qL1xuLmxpc3Qge1xuICBkaXNwbGF5OiBncmlkO1xuICBwYWRkaW5nLWJvdHRvbTogNHJlbTtcbiAgZ2FwOiA0cmVtIDJyZW07XG4gIGFsaWduLWl0ZW1zOiBzdGFydDtcbn1cblxuLmNvdW50IHtcbiAgZm9udC1zaXplOiAwLjc1cmVtO1xuICBmb250LXdlaWdodDogNzAwO1xuICBsaW5lLWhlaWdodDogMTtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBoZWlnaHQ6IDJyZW07XG4gIHdpZHRoOiAycmVtO1xuICBib3JkZXI6IDJweCBzb2xpZCAjZjlhMTM0O1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y5YTEzNDtcbiAgY29sb3I6ICNmZmZmZmY7XG59XG4uY291bnQuZmlsdGVyZWQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xuICBjb2xvcjogI2Y5YTEzNDtcbn1cblxuLmFjdGlvbnMtbGlzdCB7XG4gIG1pbi1oZWlnaHQ6IDYwdmg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzIGVhc2U7XG4gIHBhZGRpbmctdG9wOiAxcmVtO1xufVxuLmFjdGlvbnMtbGlzdC5odG14LXJlcXVlc3Qge1xuICBvcGFjaXR5OiAwLjI7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xufVxuLmFjdGlvbnMtbGlzdC5odG14LXJlcXVlc3Q6OmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDEwJTtcbiAgbGVmdDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAwKTtcbiAgd2lkdGg6IDQwcHg7XG4gIGhlaWdodDogNDBweDtcbiAgYm9yZGVyOiA0cHggc29saWQgI2RjZGNkYztcbiAgYm9yZGVyLXRvcDogNHB4IHNvbGlkICMwNWE1OWQ7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYW5pbWF0aW9uOiBzcGluIDFzIGxpbmVhciBpbmZpbml0ZTtcbn1cbi5hY3Rpb25zLWxpc3RfX3RpdGxlIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZ2FwOiAwLjc1cmVtO1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGZvbnQtc2l6ZTogY2xhbXAoMS4yNjU2cmVtLCAxLjEyODFyZW0gKyAwLjY4NzV2dywgMS45NTMxcmVtKTtcbn1cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNDhyZW0pIHtcbiAgLmFjdGlvbnMtbGlzdF9fdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogY2xhbXAoMS40MjM4cmVtLCAxLjIyMDNyZW0gKyAxLjAxNzV2dywgMi40NDEzcmVtKTtcbiAgfVxufVxuLmFjdGlvbnMtbGlzdF9fdGl0bGUtLXRleHQge1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xufVxuXG5Aa2V5ZnJhbWVzIHNwaW4ge1xuICAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSkgcm90YXRlKDBkZWcpO1xuICB9XG4gIDEwMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpIHJvdGF0ZSgzNjBkZWcpO1xuICB9XG59XG4uZGF0ZS1ncm91cCB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdhcDogMXJlbTtcbn1cblxuLypcblxuICAgIFRoZW1lIE5hbWU6IEVTQSBQZXJtaXRpbmcgUG9saWN5IFRyYWNrZXJcbiAgICBUaGVtZSBVUkk6IGh0dHBzOi8vcG9saWN5dHJhY2tlci5lc2Fzc29jLmNvbS9cbiAgICBEZXNjcmlwdGlvbjogVmVyc2lvbiAxLjAgb2YgUGVybWl0aW5nIFBvbGljeSBUcmFja2VyXG4gICAgVmVyc2lvbjogMS4wXG5cbiovXG4uZmlsdGVycyB7XG4gIG1hcmdpbjogM3JlbSAwIDJyZW0gMDtcbn1cbi5maWx0ZXJzX193cmFwcGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZhZmFmYTtcbiAgYm9yZGVyLXJhZGl1czogMC4xMjVyZW07XG4gIGJvcmRlcjogMXB4IHNvbGlkICNkY2RjZGM7XG59XG4uZmlsdGVyc19faGVhZGVyIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBwYWRkaW5nOiAxcmVtO1xufVxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA0OHJlbSkge1xuICAuZmlsdGVyc19faGVhZGVyIHtcbiAgICBjdXJzb3I6IGRlZmF1bHQ7XG4gIH1cbn1cbi5maWx0ZXJzX19oZWFkZXItd3JhcHBlciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgZ2FwOiAwLjVyZW07XG4gIHdpZHRoOiAxMDAlO1xufVxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA0OHJlbSkge1xuICAuZmlsdGVyc19faGVhZGVyLXdyYXBwZXIge1xuICAgIHBhZGRpbmctYm90dG9tOiAwLjVyZW07XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkY2RjZGM7XG4gIH1cbn1cbi5maWx0ZXJzX19oZWFkZXIgc3ZnLmNhcmV0IHtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDMwMG1zIGVhc2U7XG59XG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDQ4cmVtKSB7XG4gIC5maWx0ZXJzX19oZWFkZXIgc3ZnLmNhcmV0IHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG4uZmlsdGVyc19faGVhZGVyLm9wZW4gLmZpbHRlcnNfX2hlYWRlci13cmFwcGVyIHtcbiAgcGFkZGluZy1ib3R0b206IDAuNXJlbTtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkY2RjZGM7XG59XG4uZmlsdGVyc19faGVhZGVyLm9wZW4gc3ZnLmNhcmV0IHtcbiAgdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTtcbn1cbi5maWx0ZXJzX190aXRsZSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGdhcDogMC41cmVtO1xuICBmb250LXNpemU6IGNsYW1wKDAuODg4OHJlbSwgMC44NjY1cmVtICsgMC4xMTEzdncsIDFyZW0pO1xuICBmb250LXdlaWdodDogNjAwO1xuICBjb2xvcjogIzAwMDAwMDtcbn1cbi5maWx0ZXJzX190aXRsZSBzdmcge1xuICB3aWR0aDogMC43NXJlbTtcbiAgaGVpZ2h0OiAwLjc1cmVtO1xufVxuLmZpbHRlcnNfX3RpdGxlIHN2ZyBwYXRoIHtcbiAgZmlsbDogI2Y5YTEzNDtcbn1cbi5maWx0ZXJzX19ib2R5IHtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDFyZW07XG4gIHBhZGRpbmctdG9wOiAwO1xuICBpbnRlcnBvbGF0ZS1zaXplOiBhbGxvdy1rZXl3b3JkcztcbiAgdHJhbnNpdGlvbjogaGVpZ2h0IDAuM3MgZWFzZSwgb3ZlcmZsb3cgMC4zcyBlYXNlIDMwMG1zO1xufVxuLmZpbHRlcnNfX2JvZHkuY2xvc2VkIHtcbiAgaGVpZ2h0OiAwO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwYWRkaW5nOiAwO1xufVxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA0OHJlbSkge1xuICAuZmlsdGVyc19fYm9keS5jbG9zZWQge1xuICAgIGhlaWdodDogdW5zZXQ7XG4gICAgb3ZlcmZsb3c6IHVuc2V0O1xuICAgIHBhZGRpbmc6IDFyZW07XG4gICAgcGFkZGluZy10b3A6IDA7XG4gIH1cbn1cbi5maWx0ZXJzX19zZWxlY3RzIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maWxsLCBtaW5tYXgoMjAwcHgsIDFmcikpO1xuICBnYXA6IDFyZW07XG59XG4uZmlsdGVyc19fY2xlYXIge1xuICBmb250LWZhbWlseTogXCJSYWxld2F5XCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogY2xhbXAoMC43OXJlbSwgMC43ODhyZW0gKyAwLjAxdncsIDAuOHJlbSk7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGNvbG9yOiAjZjlhMTM0O1xuICBiYWNrZ3JvdW5kOiAjZmZmZmZmO1xuICBib3JkZXI6IDFweCBzb2xpZCAjZjlhMTM0O1xuICBib3JkZXItcmFkaXVzOiAwLjEyNXJlbTtcbiAgcGFkZGluZzogMC41cmVtIDAuNzVyZW07XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZTtcbn1cbi5maWx0ZXJzX19jbGVhcjpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICNmOWExMzQ7XG4gIGNvbG9yOiAjZmZmZmZmO1xufVxuLmZpbHRlcnNfX2NsZWFyLXdyYXBwZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZy10b3A6IDFyZW07XG59XG4uZmlsdGVycyBzZWxlY3Qge1xuICBwYWRkaW5nOiAwLjVyZW07XG4gIGJvcmRlcjogMXB4IHNvbGlkICNkY2RjZGM7XG4gIGJvcmRlci1yYWRpdXM6IDAuMTI1cmVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xuICBmb250LWZhbWlseTogXCJSYWxld2F5XCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGZvbnQtc2l6ZTogY2xhbXAoMC43OXJlbSwgMC43ODhyZW0gKyAwLjAxdncsIDAuOHJlbSk7XG4gIGNvbG9yOiAjNDY0NjQ2O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHdpZHRoOiAxMDAlO1xufVxuLmZpbHRlcnMgc2VsZWN0OmZvY3VzIHtcbiAgb3V0bGluZTogbm9uZTtcbiAgYm9yZGVyLWNvbG9yOiAjMDVhNTlkO1xufVxuLmZpbHRlcnMgaW5wdXRbdHlwZT10ZXh0XSB7XG4gIHBhZGRpbmc6IDAuNXJlbTtcbiAgYm9yZGVyOiAxcHggc29saWQgI2RjZGNkYztcbiAgYm9yZGVyLXJhZGl1czogMC4xMjVyZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XG4gIGZvbnQtZmFtaWx5OiBcIlJhbGV3YXlcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgZm9udC1zaXplOiBjbGFtcCgwLjc5cmVtLCAwLjc4OHJlbSArIDAuMDF2dywgMC44cmVtKTtcbiAgY29sb3I6ICM0NjQ2NDY7XG4gIHdpZHRoOiAxMDAlO1xufVxuLmZpbHRlcnMgaW5wdXRbdHlwZT10ZXh0XTpmb2N1cyB7XG4gIG91dGxpbmU6IG5vbmU7XG4gIGJvcmRlci1jb2xvcjogIzA1YTU5ZDtcbn1cbi5maWx0ZXJzIC5maWx0ZXItZGV0YWlsLmRpc2FibGVkIGxhYmVsIHtcbiAgY29sb3I6ICM5ODk4OTg7XG59XG4uZmlsdGVycyAuZmlsdGVyLWRldGFpbCBsYWJlbCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwYWRkaW5nLWJvdHRvbTogMC41cmVtO1xuICBmb250LWZhbWlseTogXCJSYWxld2F5XCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMC43NXJlbTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGNvbG9yOiAjMDAwMDAwO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBsZXR0ZXItc3BhY2luZzogMC4wNWVtO1xufSIsIkB1c2UgXCIuL2Fic3RyYWN0c1wiIGFzICo7XG5cbmh0bWwge1xuICAgIHNjcm9sbC1iZWhhdmlvcjogc21vb3RoO1xufVxuXG5ib2R5IHtcbiAgICBiYWNrZ3JvdW5kOiAkZ3JheS0wO1xufVxuXG4uc2l0ZSB7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBnYXA6IDA7XG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvIDFmciBhdXRvO1xuICAgIG1pbi1oZWlnaHQ6IDEwMHZoO1xufVxuIiwiJGdyYXktMDogI2ZmZmZmZjtcbiRncmF5LTUwOiAjZmFmYWZhO1xuJGdyYXktMTAwOiAjZWZlZmVmO1xuJGdyYXktMjAwOiAjZGNkY2RjO1xuJGdyYXktMzAwOiAjYmRiZGJkO1xuJGdyYXktNDAwOiAjOTg5ODk4O1xuJGdyYXktNTAwOiAjN2M3YzdjO1xuJGdyYXktNjAwOiAjNjU2NTY1O1xuJGdyYXktNzAwOiAjNTI1MjUyO1xuJGdyYXktODAwOiAjNDY0NjQ2O1xuJGdyYXktOTAwOiAjM2QzZDNkO1xuJGdyYXktOTUwOiAjMjkyOTI5O1xuJGdyYXktMTAwMDogIzAwMDAwMDtcblxuJHRlYWw6ICMwNWE1OWQ7XG4kb3JhbmdlOiAjZjlhMTM0O1xuJHJlZDogI2MxMjcyZDtcbiRibHVlOiAjMTE4ZGJhO1xuIiwiQHVzZSBcIi4vYWJzdHJhY3RzXCIgYXMgKjtcblxuYm9keSxcbmJ1dHRvbixcbmlucHV0LFxuc2VsZWN0LFxub3B0Z3JvdXAsXG50ZXh0YXJlYSB7XG4gICAgZm9udC1mYW1pbHk6ICRyYWxld2F5O1xufVxuXG5hIHtcbiAgICBjb2xvcjogJGdyYXktMTAwMDtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbjo6LW1vei1zZWxlY3Rpb24ge1xuICAgIGJhY2tncm91bmQ6ICR0ZWFsO1xuICAgIHRleHQtc2hhZG93OiBub25lO1xufVxuXG46OnNlbGVjdGlvbiB7XG4gICAgYmFja2dyb3VuZDogJHRlYWw7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIHRleHQtc2hhZG93OiBub25lO1xufVxuXG5oMSxcbmgyLFxuaDMsXG5oNCxcbmg1LFxuaDYge1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG59XG5cbi5zdWItaGVhZGVyIHtcbiAgICBmb250LXNpemU6ICR0eXBlLXNpemUtMjAwO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDAuMWVtO1xuICAgIGNvbG9yOiAkdGVhbDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLmFuYWx5c2lzLWhlYWRlciB7XG4gICAgZm9udC1zaXplOiAkdHlwZS1zaXplLTMwMDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbn1cbi5iYWRnZSB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIGZvbnQtZmFtaWx5OiAkcmFsZXdheTtcbiAgICBmb250LXNpemU6IDAuNjEyNXJlbTtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIGxldHRlci1zcGFjaW5nOiAwLjFlbTtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZ3JheS01MDtcbiAgICBib3JkZXItcmFkaXVzOiAkc3BhY2luZy0wNTA7XG4gICAgYm9yZGVyOiAxcHggc29saWQgJGdyYXktMjAwO1xuICAgIGxpbmUtaGVpZ2h0OiAxO1xuICAgIHBhZGRpbmc6IDZweCAkc3BhY2luZy0yMDAgNHB4O1xuXG4gICAgJi5kYXJrIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGdyYXktODAwO1xuICAgICAgICBib3JkZXItY29sb3I6ICRncmF5LTgwMDtcbiAgICAgICAgY29sb3I6ICRncmF5LTA7XG4gICAgfVxufVxuXG4uc3RhdHVzIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGdhcDogJHNwYWNpbmctMTAwO1xuICAgIGZvbnQtZmFtaWx5OiAkcmFsZXdheTtcbiAgICBmb250LXNpemU6IDAuNjEyNXJlbTtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIGxldHRlci1zcGFjaW5nOiAwLjFlbTtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAkZ3JheS0yMDA7XG4gICAgbGluZS1oZWlnaHQ6IDE7XG4gICAgcGFkZGluZzogNnB4ICRzcGFjaW5nLTIwMCA0cHg7XG5cbiAgICAmX19pbmRpY2F0YXRvciB7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgd2lkdGg6IDVweDtcbiAgICAgICAgaGVpZ2h0OiA1cHg7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICB9XG59XG4iLCIvLyBodHRwczovL3V0b3BpYS5meWkvdHlwZS9jYWxjdWxhdG9yLz9jPTMyMCwxNiwxLjEyNSwxOTIwLDIwLDEuMjUsNiw0LCZzPTAuNzV8MC41fDAuMjUsMS41fDJ8M3w0fDYscy1sJmc9cyxsLHhsLDEyXG5cbiR0eXBlLXNpemUtMDUwOiBjbGFtcCgwLjUxMTlyZW0sIDAuNjQ2OXJlbSArIC0wLjExMjV2dywgMC42MjQ0cmVtKTtcbiR0eXBlLXNpemUtMTAwOiBjbGFtcCgwLjY0cmVtLCAwLjcxNXJlbSArIC0wLjA2MjV2dywgMC43MDI1cmVtKTtcbiR0eXBlLXNpemUtMjAwOiBjbGFtcCgwLjc5cmVtLCAwLjc4OHJlbSArIDAuMDF2dywgMC44cmVtKTtcbiR0eXBlLXNpemUtMzAwOiBjbGFtcCgwLjg4ODhyZW0sIDAuODY2NXJlbSArIDAuMTExM3Z3LCAxcmVtKTtcbiR0eXBlLXNpemUtNDAwOiBjbGFtcCgxcmVtLCAwLjk1cmVtICsgMC4yNXZ3LCAxLjI1cmVtKTtcbiR0eXBlLXNpemUtNTAwOiBjbGFtcCgxLjEyNXJlbSwgMS4wMzc1cmVtICsgMC40Mzc1dncsIDEuNTYyNXJlbSk7XG4kdHlwZS1zaXplLTYwMDogY2xhbXAoMS4yNjU2cmVtLCAxLjEyODFyZW0gKyAwLjY4NzV2dywgMS45NTMxcmVtKTtcbiR0eXBlLXNpemUtNzAwOiBjbGFtcCgxLjQyMzhyZW0sIDEuMjIwM3JlbSArIDEuMDE3NXZ3LCAyLjQ0MTNyZW0pO1xuJHR5cGUtc2l6ZS04MDA6IGNsYW1wKDEuNjAxOXJlbSwgMS4zMTE5cmVtICsgMS40NXZ3LCAzLjA1MTlyZW0pO1xuJHR5cGUtc2l6ZS05MDA6IGNsYW1wKDEuODAxOXJlbSwgMS4zOTkzcmVtICsgMi4wMTMxdncsIDMuODE1cmVtKTtcbiR0eXBlLXNpemUtMTAwMDogY2xhbXAoMi4wMjc1cmVtLCAxLjQ3OTRyZW0gKyAyLjc0MDZ2dywgNC43NjgxcmVtKTtcbiIsIiRzcGFjaW5nLXVuaXQ6IDFyZW07XG4kc3BhY2luZy0wNTA6IGNhbGMoMC4xMjUgKiAkc3BhY2luZy11bml0KTtcbiRzcGFjaW5nLTEwMDogY2FsYygwLjI1ICogJHNwYWNpbmctdW5pdCk7XG4kc3BhY2luZy0yMDA6IGNhbGMoMC41ICogJHNwYWNpbmctdW5pdCk7XG4kc3BhY2luZy0zMDA6IGNhbGMoMC43NSAqICRzcGFjaW5nLXVuaXQpO1xuJHNwYWNpbmctNDAwOiBjYWxjKDEgKiAkc3BhY2luZy11bml0KTtcbiRzcGFjaW5nLTUwMDogY2FsYygxLjUgKiAkc3BhY2luZy11bml0KTtcbiRzcGFjaW5nLTYwMDogY2FsYygyICogJHNwYWNpbmctdW5pdCk7XG4kc3BhY2luZy03MDA6IGNhbGMoMyAqICRzcGFjaW5nLXVuaXQpO1xuJHNwYWNpbmctODAwOiBjYWxjKDQgKiAkc3BhY2luZy11bml0KTtcbiRzcGFjaW5nLTkwMDogY2FsYyg2ICogJHNwYWNpbmctdW5pdCk7XG4iLCJAdXNlIFwiLi9hYnN0cmFjdHNcIiBhcyAqO1xuXG4uZ3JpZCB7XG4gICAgZGlzcGxheTogZ3JpZDtcbn1cbiIsIi5mbGV4IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xufVxuXG4uanVzdGlmeS1zdGFydCB7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xufVxuXG4uanVzdGlmeS1jZW50ZXIge1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4uanVzdGlmeS1iZXR3ZWVuIHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59XG5cbi5qdXN0aWZ5LWVuZCB7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbn1cblxuLml0ZW1zLXN0YXJ0IHtcbiAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbn1cblxuLml0ZW1zLWNlbnRlciB7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLml0ZW1zLWVuZCB7XG4gICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xufVxuXG4uaXRlbXMtc3RyZXRjaCB7XG4gICAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7XG59XG5cbi5wbGFjZS1jZW50ZXIge1xuICAgIHBsYWNlLWNvbnRlbnQ6IGNlbnRlcjtcbn1cbiIsIkB1c2UgXCIuL2Fic3RyYWN0c1wiIGFzICo7XG5cbi5jb250ZW50LWdyaWQge1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgZ2FwOiAkc3BhY2luZy02MDA7XG4gICAgYWxpZ24taXRlbXM6IHN0YXJ0O1xuICAgIGFsaWduLWNvbnRlbnQ6IHN0YXJ0O1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczpcbiAgICAgICAgW2Z1bGwtd2lkdGgtc3RhcnRdIG1pbm1heCgwLCBhdXRvKVxuICAgICAgICBbY29udGVudC1zdGFydF1cbiAgICAgICAgcmVwZWF0KDQsIG1pbm1heChhdXRvLCAxZnIpKVxuICAgICAgICBbY29udGVudC1lbmRdXG4gICAgICAgIG1pbm1heCgwLCBhdXRvKSBbZnVsbC13aWR0aC1lbmRdO1xuXG4gICAgQGluY2x1ZGUgbXEodGFibGV0LXNtYWxsKSB7XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczpcbiAgICAgICAgICAgIFtmdWxsLXdpZHRoLXN0YXJ0XSBtaW5tYXgoMCwgYXV0bylcbiAgICAgICAgICAgIFtjb250ZW50LXN0YXJ0XVxuICAgICAgICAgICAgcmVwZWF0KDgsIG1pbm1heChhdXRvLCAxZnIpKVxuICAgICAgICAgICAgW2NvbnRlbnQtZW5kXVxuICAgICAgICAgICAgbWlubWF4KDAsIGF1dG8pIFtmdWxsLXdpZHRoLWVuZF07XG4gICAgfVxuXG4gICAgQGluY2x1ZGUgbXEoZGVza3RvcC1zbWFsbCkge1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6XG4gICAgICAgICAgICBbZnVsbC13aWR0aC1zdGFydF0gbWlubWF4KDAsIGF1dG8pXG4gICAgICAgICAgICBbY29udGVudC1zdGFydF1cbiAgICAgICAgICAgIHJlcGVhdCgzLCBtaW5tYXgoMCwgNC41cmVtKSlcbiAgICAgICAgICAgIFtuYXJyb3ctc3RhcnRdXG4gICAgICAgICAgICByZXBlYXQoNiwgbWlubWF4KDAsIDQuNXJlbSkpXG4gICAgICAgICAgICBbbmFycm93LWVuZF1cbiAgICAgICAgICAgIHJlcGVhdCgzLCBtaW5tYXgoMCwgNC41cmVtKSlcbiAgICAgICAgICAgIFtjb250ZW50LWVuZF1cbiAgICAgICAgICAgIG1pbm1heCgwLCBhdXRvKSBbZnVsbC13aWR0aC1lbmRdO1xuICAgIH1cblxuICAgICYgPiAqIHtcbiAgICAgICAgZ3JpZC1jb2x1bW46IGNvbnRlbnQ7XG4gICAgfVxufVxuIiwiQHVzZSBcImJyZWFrcG9pbnRzXCIgYXMgKjtcbkB1c2UgXCJzYXNzOm1hcFwiO1xuXG5AbWl4aW4gbXEoJGtleSkge1xuICAgICRzaXplOiBtYXAuZ2V0KCRicmVha3BvaW50cywgJGtleSk7XG5cbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICRzaXplKSB7XG4gICAgICAgIEBjb250ZW50O1xuICAgIH1cbn1cbiIsIi5mbG93IHtcbiAgICAmID4gKiArICoge1xuICAgICAgICBtYXJnaW4tYmxvY2stc3RhcnQ6IHZhcigtLWZsb3ctc3BhY2VyLCAxcmVtKTtcbiAgICB9XG59XG4iLCJAdXNlIFwiLi9hYnN0cmFjdHNcIiBhcyAqO1xuXG4uY29weS0xIHtcbiAgICBmb250LXNpemU6ICR0eXBlLXNpemUtNDAwO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjU7XG59XG5cbi5jb3B5LTIge1xuICAgIGZvbnQtc2l6ZTogJHR5cGUtc2l6ZS0zMDA7XG4gICAgbGluZS1oZWlnaHQ6IDEuNTtcbn1cblxuLmNvcHktMyB7XG4gICAgZm9udC1zaXplOiAkdHlwZS1zaXplLTIwMDtcbiAgICBsaW5lLWhlaWdodDogMS41O1xufVxuXG4uY29weSB7XG4gICAgYSB7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAgIH1cbn1cbiIsIi5waWxlIHtcbiAgICBkaXNwbGF5OiBncmlkO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5cbiAgICAmID4gKiB7XG4gICAgICAgIGdyaWQtY29sdW1uOiAxO1xuICAgICAgICBncmlkLXJvdzogMTtcbiAgICB9XG59XG4iLCJAdXNlIFwiLi9hYnN0cmFjdHNcIiBhcyAqO1xuXG4uc2l0ZS1sb2dvIHtcbiAgICAmX19saW5rIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuICAgICAgICBnYXA6ICRzcGFjaW5nLTQwMDtcbiAgICB9XG5cbiAgICAmX19pbWFnZSB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICB3aWR0aDogNHJlbTtcblxuICAgICAgICBAaW5jbHVkZSBtcShkZXNrdG9wLXNtYWxsKSB7XG4gICAgICAgICAgICB3aWR0aDogNi41cmVtO1xuICAgICAgICB9XG5cbiAgICAgICAgaW1nIHtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICB9XG4gICAgfVxufVxuIiwiQHVzZSBcIi4vYWJzdHJhY3RzXCIgYXMgKjtcblxuLnNpdGUtbmF2IHtcbiAgICAmX19kZXNrdG9wIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcblxuICAgICAgICBAaW5jbHVkZSBtcShkZXNrdG9wLXNtYWxsKSB7XG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICAgIGdhcDogJHNwYWNpbmctNjAwO1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgICAgICAgfVxuXG4gICAgICAgICYtaXRlbSB7XG4gICAgICAgICAgICBwYWRkaW5nOiAkc3BhY2luZy0xMDAgMDtcbiAgICAgICAgfVxuXG4gICAgICAgICYtbGluayB7XG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICBmb250LXNpemU6IDAuODc1cmVtO1xuICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgdHJhbnNpdGlvbjogYWxsIDMwMG1zIGVhc2U7XG4gICAgICAgICAgICBmb250LXdlaWdodDogNjAwO1xuICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgICAgICAgIGxldHRlci1zcGFjaW5nOiAwLjA1ZW07XG4gICAgICAgICAgICBjb2xvcjogJGdyYXktOTUwO1xuXG4gICAgICAgICAgICAmOmhvdmVyLFxuICAgICAgICAgICAgJi5hY3RpdmUge1xuICAgICAgICAgICAgICAgIGJvcmRlci1jb2xvcjogJHRlYWw7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmX19tb2JpbGUge1xuICAgICAgICBwYWRkaW5nOiAkc3BhY2luZy02MDA7XG4gICAgICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgICAgIGdhcDogJHNwYWNpbmctNjAwO1xuICAgICAgICBhbGlnbi1zZWxmOiBzdGFydDtcblxuICAgICAgICAmLWl0ZW0ge1xuICAgICAgICAgICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICAgICAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgfVxuXG4gICAgICAgICYtbGluayB7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgIGNvbG9yOiAkZ3JheS0wO1xuICAgICAgICAgICAgZm9udC1zaXplOiAkdHlwZS1zaXplLTQwMDtcbiAgICAgICAgICAgIHRyYW5zaXRpb246IGFsbCAxNTBtcyBlYXNlO1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICAgICAgfVxuICAgIH1cbn1cbiIsIkB1c2UgXCIuL2Fic3RyYWN0c1wiIGFzICo7XG5cbiNtb2JpbGUtZHJhd2VyIHtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IC0xMDAlO1xuICAgIGhlaWdodDogMTAwdmg7XG4gICAgd2lkdGg6IDc1JTtcbiAgICB6LWluZGV4OiA5OTk7XG4gICAgY29sb3I6ICRncmF5LTA7XG4gICAgYm94LXNoYWRvdzogMnB4IDAgNXB4IHJnYmEoMCwgMCwgMCwgMC4yKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwMCUpO1xuICAgIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UtaW4tb3V0O1xuICAgIGJhY2tncm91bmQ6ICRncmF5LTk1MDtcblxuICAgIEBpbmNsdWRlIG1xKHRhYmxldCkge1xuICAgICAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG4gICAgfVxuXG4gICAgJi5pcy1vcGVuIHtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgICAgICBsZWZ0OiAwO1xuICAgIH1cbn1cbiIsIkB1c2UgXCIuL2Fic3RyYWN0c1wiIGFzICo7XG5cbi5vdmVybGF5IHtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDB2aDtcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3MgZWFzZS1pbi1vdXQ7XG4gICAgei1pbmRleDogOTk4O1xuXG4gICAgJi5pcy12aXNpYmxlIHtcbiAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgICAgdmlzaWJpbGl0eTogdmlzaWJsZTtcbiAgICB9XG59XG5cbi5oYW1idXJnZXIge1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAganVzdGlmeS1jb250ZW50OiBlbmQ7XG5cbiAgICBAaW5jbHVkZSBtcSh0YWJsZXQpIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICB9XG5cbiAgICBAaW5jbHVkZSBtcShkZXNrdG9wLXNtYWxsKSB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuXG4gICAgJl9fbGluayB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgfVxuXG4gICAgJl9fYnVucyB7XG4gICAgICAgIHdpZHRoOiAycmVtO1xuICAgICAgICBoZWlnaHQ6IDIycHg7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIG1hcmdpbi1yaWdodDogYXV0bztcbiAgICB9XG5cbiAgICAmX19wYXR0eSB7XG4gICAgICAgIHdpZHRoOiAycmVtO1xuICAgICAgICBoZWlnaHQ6IDJweDtcbiAgICAgICAgYmFja2dyb3VuZDogJGdyYXktNTAwO1xuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMC4ycztcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgICAgICY6YWZ0ZXIsXG4gICAgICAgICY6YmVmb3JlIHtcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgIHdpZHRoOiAycmVtO1xuICAgICAgICAgICAgaGVpZ2h0OiAycHg7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAkZ3JheS01MDA7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICB6LWluZGV4OiAxO1xuICAgICAgICAgICAgdHJhbnNpdGlvbjogYWxsIDAuMnM7XG4gICAgICAgIH1cblxuICAgICAgICAmOmJlZm9yZSB7XG4gICAgICAgICAgICB0b3A6IC02cHg7XG4gICAgICAgIH1cblxuICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICAgIHRvcDogNnB4O1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgJi5uYXYtb3BlbiB7XG4gICAgICAgIC5oYW1idXJnZXJfX3BhdHR5IHtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuXG4gICAgICAgICAgICAmOjpiZWZvcmUge1xuICAgICAgICAgICAgICAgIHJvdGF0ZTogNDVkZWc7XG4gICAgICAgICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAmOjphZnRlciB7XG4gICAgICAgICAgICAgICAgcm90YXRlOiAtNDVkZWc7XG4gICAgICAgICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuIiwiQHVzZSBcIi4vYWJzdHJhY3RzXCIgYXMgKjtcblxuQGZvcndhcmQgXCJsb2dvXCI7XG5cbkBmb3J3YXJkIFwibmF2XCI7XG5cbkBmb3J3YXJkIFwibW9iaWxlLWRyYXdlclwiO1xuXG5AZm9yd2FyZCBcImhhbWJ1cmdlclwiO1xuXG4uc2l0ZS1oZWFkZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRncmF5LTA7XG4gICAgcGFkZGluZzogJHNwYWNpbmctNTAwIDA7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgei1pbmRleDogMTAwMDtcblxuICAgIEBpbmNsdWRlIG1xKGRlc2t0b3Atc21hbGwpIHtcbiAgICAgICAgcGFkZGluZzogJHNwYWNpbmctNjAwIDA7XG4gICAgfVxuXG4gICAgJl9fd3JhcHBlciB7XG4gICAgICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogYXV0byAxZnI7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgfVxufVxuIiwiQHVzZSBcIi4vYWJzdHJhY3RzXCIgYXMgKjtcblxuLnJlc2NpbmRlZC1wb2xpY3kge1xuICAgIG1hcmdpbi10b3A6ICRzcGFjaW5nLTIwMDtcbiAgICBiYWNrZ3JvdW5kOiAkZ3JheS0wO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICRncmF5LTIwMDtcbiAgICBib3JkZXItcmFkaXVzOiAkc3BhY2luZy0wNTA7XG5cbiAgICAmX19oZWFkZXIge1xuICAgICAgICBkaXNwbGF5OiBncmlkO1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciBhdXRvO1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBnYXA6ICRzcGFjaW5nLTIwMDtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICBwYWRkaW5nOiAkc3BhY2luZy00MDA7XG5cbiAgICAgICAgc3ZnLmNhcmV0IHtcbiAgICAgICAgICAgIHBhdGgge1xuICAgICAgICAgICAgICAgIGZpbGw6ICRyZWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAmLm9wZW4ge1xuICAgICAgICAgICAgc3ZnLmNhcmV0IHtcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgJl9fdGl0bGUge1xuICAgICAgICBmb250LXNpemU6ICR0eXBlLXNpemUtMjAwO1xuICAgICAgICBmb250LXdlaWdodDogNjAwO1xuICAgICAgICBkaXNwbGF5OiBncmlkO1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDAuNzVyZW0gMWZyO1xuICAgICAgICBhbGlnbi1pdGVtczogc3RhcnQ7XG4gICAgICAgIGdhcDogJHNwYWNpbmctMjAwO1xuXG4gICAgICAgIHN2ZyB7XG4gICAgICAgICAgICB3aWR0aDogMC43NXJlbTtcbiAgICAgICAgICAgIGhlaWdodDogMC43NXJlbTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgxcHgpO1xuICAgICAgICAgICAgcGF0aCB7XG4gICAgICAgICAgICAgICAgZmlsbDogJHJlZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgICZfX2JvZHkge1xuICAgICAgICBpbnRlcnBvbGF0ZS1zaXplOiBhbGxvdy1rZXl3b3JkcztcbiAgICAgICAgdHJhbnNpdGlvbjogaGVpZ2h0IDAuM3MgZWFzZSwgcGFkZGluZyAwLjNzIGVhc2UsIG92ZXJmbG93IDAuM3MgZWFzZSAzMDBtcztcbiAgICAgICAgaGVpZ2h0OiAwO1xuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuXG4gICAgICAgICYub3BlbiB7XG4gICAgICAgICAgICBoZWlnaHQ6IGF1dG87XG4gICAgICAgICAgICBvdmVyZmxvdzogdW5zZXQ7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmX19kZXNjcmlwdGlvbiB7XG4gICAgICAgIHBhZGRpbmc6IDAgJHNwYWNpbmctNDAwICRzcGFjaW5nLTQwMCAkc3BhY2luZy00MDA7XG4gICAgfVxuXG4gICAgJl9fbGluayB7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBnYXA6ICRzcGFjaW5nLTEwMDtcbiAgICAgICAgY29sb3I6ICRyZWQ7XG5cbiAgICAgICAgc3ZnIHBhdGgge1xuICAgICAgICAgICAgZmlsbDogJHJlZDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgICZfX2Zvb3RlciB7XG4gICAgICAgIHBhZGRpbmc6IDAgJHNwYWNpbmctNDAwICRzcGFjaW5nLTQwMCAkc3BhY2luZy00MDA7XG4gICAgICAgIGg0IHtcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgICB9XG4gICAgfVxufVxuIiwiQHVzZSBcIi4vYWJzdHJhY3RzXCIgYXMgKjtcblxuQGZvcndhcmQgXCJyZXNjaW5kZWQtcG9saWN5XCI7XG5cbi5hY3Rpb24ge1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgYWxpZ24taXRlbXM6IHN0YXJ0O1xuICAgIHBhZGRpbmc6ICRzcGFjaW5nLTMwMDtcbiAgICBib3JkZXItcmFkaXVzOiAkc3BhY2luZy0wNTA7XG4gICAgYm9yZGVyOiAxcHggc29saWQgJGdyYXktMjAwO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRncmF5LTA7XG4gICAgYm94LXNoYWRvdzogMCA0cHggOHB4IDAgcmdiYSgwLCAwLCAwLCAwLjA1KTtcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xuXG4gICAgJjpob3ZlciB7XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB9XG5cbiAgICAmX19oZWFkZXIge1xuICAgICAgICBkaXNwbGF5OiBncmlkO1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciBhdXRvO1xuICAgICAgICBnYXA6ICRzcGFjaW5nLTMwMDtcblxuICAgICAgICBzdmcge1xuICAgICAgICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3MgZWFzZTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgICZfX2RhdGUge1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAkc3BhY2luZy0xMDA7XG4gICAgfVxuXG4gICAgJl9fdGl0bGUge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgICAgIGdhcDogJHNwYWNpbmctMjAwICRzcGFjaW5nLTMwMDtcblxuICAgICAgICAmLXRleHQge1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMS4xO1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICAgICAgICAgIGxldHRlci1zcGFjaW5nOiAtMC4wMjVlbTtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgICAgICAgICAgIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG5cbiAgICAgICAgICAgIEBpbmNsdWRlIG1xKHRhYmxldCkge1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMS4xMjVyZW07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmLm9wZW4ge1xuICAgICAgICBAaW5jbHVkZSBtcSh0YWJsZXQpIHtcbiAgICAgICAgICAgIHBhZGRpbmc6ICRzcGFjaW5nLTUwMCAkc3BhY2luZy01MDA7XG4gICAgICAgIH1cblxuICAgICAgICAuYWN0aW9uIHtcbiAgICAgICAgICAgICZfX2hlYWRlciB7XG4gICAgICAgICAgICAgICAgc3ZnIHtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICZfX3RpdGxlIHtcbiAgICAgICAgICAgICAgICAmLXRleHQge1xuICAgICAgICAgICAgICAgICAgICBAaW5jbHVkZSBtcSh0YWJsZXQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMS4zNzVyZW07XG4gICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICZfX2JvZHkge1xuICAgICAgICAgICAgICAgIGhlaWdodDogYXV0bztcbiAgICAgICAgICAgICAgICBjdXJzb3I6IGRlZmF1bHQ7XG4gICAgICAgICAgICAgICAgb3ZlcmZsb3c6IHZpc2libGU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICZfX2Zvb3RlciB7XG4gICAgICAgICAgICAgICAgY3Vyc29yOiBkZWZhdWx0O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgJl9fYm9keSB7XG4gICAgICAgIGhlaWdodDogMDtcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgaW50ZXJwb2xhdGUtc2l6ZTogYWxsb3cta2V5d29yZHM7XG4gICAgICAgIHRyYW5zaXRpb246IGhlaWdodCAwLjNzIGVhc2UsIG92ZXJmbG93IDAuM3MgZWFzZSAzMDBtcztcblxuICAgICAgICAmLXdyYXBwZXIge1xuICAgICAgICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICAgICAgICAgIGdhcDogJHNwYWNpbmctNTAwICRzcGFjaW5nLTYwMDtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBzdGFydDtcbiAgICAgICAgICAgIHBhZGRpbmc6ICRzcGFjaW5nLTUwMCAwO1xuICAgICAgICAgICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICRncmF5LTEwMDtcbiAgICAgICAgICAgIG1hcmdpbi10b3A6ICRzcGFjaW5nLTMwMDtcbiAgICAgICAgICAgIEBpbmNsdWRlIG1xKHRhYmxldCkge1xuICAgICAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDIsIG1pbm1heCgwLCAxZnIpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgICZfX2RldGFpbHMge1xuICAgICAgICBkaXNwbGF5OiBncmlkO1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgyLCBtaW5tYXgoMCwgMWZyKSk7XG4gICAgICAgIGdhcDogJHNwYWNpbmctNTAwICRzcGFjaW5nLTYwMDtcblxuICAgICAgICAudHdvLWNvbCB7XG4gICAgICAgICAgICBncmlkLWNvbHVtbjogc3BhbiAyO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgJl9fZGV0YWlsIHtcbiAgICAgICAgLnN1Yi1oZWFkZXIge1xuICAgICAgICAgICAgcGFkZGluZy1ib3R0b206ICRzcGFjaW5nLTA1MDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgICZfX2FuYWx5c2lzIHtcbiAgICAgICAgYmFja2dyb3VuZDogJGdyYXktNTA7XG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICRncmF5LTIwMDtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogJHNwYWNpbmctMDUwO1xuICAgICAgICBwYWRkaW5nOiAkc3BhY2luZy00MDA7XG5cbiAgICAgICAgJi1oZWFkZXIge1xuICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgcGFkZGluZy1ib3R0b206ICRzcGFjaW5nLTMwMDtcbiAgICAgICAgfVxuXG4gICAgICAgICYtbGlzdCB7XG4gICAgICAgICAgICBkaXNwbGF5OiBncmlkO1xuICAgICAgICAgICAgZ2FwOiAkc3BhY2luZy02MDA7XG4gICAgICAgICAgICBhbGlnbi1pdGVtczogc3RhcnQ7XG4gICAgICAgIH1cblxuICAgICAgICAuYW5hbHlzaXMtaGVhZGVyIHtcbiAgICAgICAgICAgIHBhZGRpbmctYm90dG9tOiAkc3BhY2luZy0xMDA7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmX19saW5rIHtcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBnYXA6ICRzcGFjaW5nLTIwMDtcbiAgICB9XG5cbiAgICAmX192YWx1ZSB7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjI7XG4gICAgfVxuXG4gICAgJl9fZm9vdGVyIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgICAgICAgcGFkZGluZy10b3A6ICRzcGFjaW5nLTUwMDtcbiAgICAgICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICRncmF5LTIwMDtcblxuICAgICAgICBAaW5jbHVkZSBtcSh0YWJsZXQpIHtcbiAgICAgICAgICAgIHBhZGRpbmctdG9wOiAkc3BhY2luZy0zMDA7XG4gICAgICAgIH1cblxuICAgICAgICAmLWRhdGUge1xuICAgICAgICAgICAgZm9udC1zaXplOiAkdHlwZS1zaXplLTIwMDtcbiAgICAgICAgICAgIGNvbG9yOiAkZ3JheS01MDA7XG4gICAgICAgICAgICBmb250LXN0eWxlOiBpdGFsaWM7XG4gICAgICAgIH1cbiAgICB9XG59XG4iLCJAdXNlIFwiLi9hYnN0cmFjdHNcIiBhcyAqO1xuXG4uaGVybyB7XG4gICAgbWFyZ2luLWJvdHRvbTogJHNwYWNpbmctNjAwO1xuICAgICZfX3Bob3RvIHtcbiAgICAgICAgZ3JpZC1jb2x1bW46IDEgLyAtMTtcbiAgICAgICAgZ3JpZC1yb3c6IDEgLyBzcGFuIDI7XG4gICAgICAgIHotaW5kZXg6IDE7XG4gICAgICAgIGFzcGVjdC1yYXRpbzogMTYgLyA2O1xuXG4gICAgICAgIEBpbmNsdWRlIG1xKHRhYmxldCkge1xuICAgICAgICAgICAgYXNwZWN0LXJhdGlvOiAxNiAvIDQ7XG4gICAgICAgIH1cblxuICAgICAgICBpbWcge1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgICAgICAgfVxuICAgIH1cblxuICAgICZfX2luZm8ge1xuICAgICAgICBhbGlnbi1zZWxmOiBlbmQ7XG4gICAgICAgIGdyaWQtcm93OiAyIC8gc3BhbiAyO1xuICAgICAgICB6LWluZGV4OiAyO1xuICAgICAgICBwYWRkaW5nOiAkc3BhY2luZy01MDA7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRncmF5LTA7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6ICRzcGFjaW5nLTA1MDtcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgJGdyYXktMjAwO1xuICAgICAgICBncmlkLWNvbHVtbjogMiAvIHNwYW4gNDtcbiAgICAgICAgYm94LXNoYWRvdzogMHB4IDQ5cHggMzBweCAwcHggcmdiYSgwLCAwLCAwLCAwLjA1KSwgMHB4IDIycHggMjJweCAwcHggcmdiYSgwLCAwLCAwLCAwLjA5KSxcbiAgICAgICAgICAgIDBweCA1cHggMTJweCAwcHggcmdiYSgwLCAwLCAwLCAwLjEpLCAwcHggODhweCAzNXB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMDEpLFxuICAgICAgICAgICAgMHB4IDEzN3B4IDM4cHggMHB4IHJnYmEoMCwgMCwgMCwgMCk7XG5cbiAgICAgICAgQGluY2x1ZGUgbXEodGFibGV0LXNtYWxsKSB7XG4gICAgICAgICAgICBncmlkLWNvbHVtbjogMiAvIHNwYW4gNjtcbiAgICAgICAgfVxuXG4gICAgICAgIEBpbmNsdWRlIG1xKGRlc2t0b3Atc21hbGwpIHtcbiAgICAgICAgICAgIGdyaWQtY29sdW1uOiAyIC8gc3BhbiA4O1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgJl9faGVhZGxpbmUge1xuICAgICAgICBjb2xvcjogJHRlYWw7XG4gICAgICAgIGZvbnQtc2l6ZTogJHR5cGUtc2l6ZS02MDA7XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAkc3BhY2luZy0yMDA7XG4gICAgfVxufVxuIiwiQHVzZSBcIi4vYWJzdHJhY3RzXCIgYXMgKjtcblxuLmxpc3Qge1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgcGFkZGluZy1ib3R0b206ICRzcGFjaW5nLTgwMDtcbiAgICBnYXA6ICRzcGFjaW5nLTgwMCAkc3BhY2luZy02MDA7XG4gICAgYWxpZ24taXRlbXM6IHN0YXJ0O1xufVxuXG4uY291bnQge1xuICAgIGZvbnQtc2l6ZTogMC43NXJlbTtcbiAgICBmb250LXdlaWdodDogNzAwO1xuICAgIGxpbmUtaGVpZ2h0OiAxO1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICBoZWlnaHQ6IDJyZW07XG4gICAgd2lkdGg6IDJyZW07XG4gICAgYm9yZGVyOiAycHggc29saWQgJG9yYW5nZTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJG9yYW5nZTtcbiAgICBjb2xvcjogJGdyYXktMDtcblxuICAgICYuZmlsdGVyZWQge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZ3JheS0wO1xuICAgICAgICBjb2xvcjogJG9yYW5nZTtcbiAgICB9XG59XG5cbi5hY3Rpb25zLWxpc3Qge1xuICAgIG1pbi1oZWlnaHQ6IDYwdmg7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcyBlYXNlO1xuICAgIHBhZGRpbmctdG9wOiAkc3BhY2luZy00MDA7XG5cbiAgICAmLmh0bXgtcmVxdWVzdCB7XG4gICAgICAgIG9wYWNpdHk6IDAuMjtcbiAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG5cbiAgICAgICAgJjo6YWZ0ZXIge1xuICAgICAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIHRvcDogMTAlO1xuICAgICAgICAgICAgbGVmdDogNTAlO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgMCk7XG4gICAgICAgICAgICB3aWR0aDogNDBweDtcbiAgICAgICAgICAgIGhlaWdodDogNDBweDtcbiAgICAgICAgICAgIGJvcmRlcjogNHB4IHNvbGlkICRncmF5LTIwMDtcbiAgICAgICAgICAgIGJvcmRlci10b3A6IDRweCBzb2xpZCAkdGVhbDtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICAgICAgICAgIGFuaW1hdGlvbjogc3BpbiAxcyBsaW5lYXIgaW5maW5pdGU7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmX190aXRsZSB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIGdhcDogJHNwYWNpbmctMzAwO1xuICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgICAgIGZvbnQtc2l6ZTogJHR5cGUtc2l6ZS02MDA7XG5cbiAgICAgICAgQGluY2x1ZGUgbXEodGFibGV0KSB7XG4gICAgICAgICAgICBmb250LXNpemU6ICR0eXBlLXNpemUtNzAwO1xuICAgICAgICB9XG5cbiAgICAgICAgJi0tdGV4dCB7XG4gICAgICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgICAgICB9XG4gICAgfVxufVxuXG5Aa2V5ZnJhbWVzIHNwaW4ge1xuICAgIDAlIHtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSkgcm90YXRlKDBkZWcpO1xuICAgIH1cbiAgICAxMDAlIHtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSkgcm90YXRlKDM2MGRlZyk7XG4gICAgfVxufVxuXG4uZGF0ZS1ncm91cCB7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBnYXA6ICRzcGFjaW5nLTQwMDtcbn1cbiIsIkB1c2UgXCIuLi8uLi9hYnN0cmFjdHNcIiBhcyAqO1xuXG4uZmlsdGVycyB7XG4gICAgbWFyZ2luOiAkc3BhY2luZy03MDAgMCAkc3BhY2luZy02MDAgMDtcblxuICAgICZfX3dyYXBwZXIge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZ3JheS01MDtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogJHNwYWNpbmctMDUwO1xuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAkZ3JheS0yMDA7XG4gICAgfVxuXG4gICAgJl9faGVhZGVyIHtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICBwYWRkaW5nOiAkc3BhY2luZy00MDA7XG5cbiAgICAgICAgQGluY2x1ZGUgbXEodGFibGV0KSB7XG4gICAgICAgICAgICBjdXJzb3I6IGRlZmF1bHQ7XG4gICAgICAgIH1cblxuICAgICAgICAmLXdyYXBwZXIge1xuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICAgICAgICBnYXA6ICRzcGFjaW5nLTIwMDtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuXG4gICAgICAgICAgICBAaW5jbHVkZSBtcSh0YWJsZXQpIHtcbiAgICAgICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogJHNwYWNpbmctMjAwO1xuICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkZ3JheS0yMDA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBzdmcuY2FyZXQge1xuICAgICAgICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDMwMG1zIGVhc2U7XG5cbiAgICAgICAgICAgIEBpbmNsdWRlIG1xKHRhYmxldCkge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAmLm9wZW4ge1xuICAgICAgICAgICAgLmZpbHRlcnNfX2hlYWRlci13cmFwcGVyIHtcbiAgICAgICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogJHNwYWNpbmctMjAwO1xuICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkZ3JheS0yMDA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzdmcuY2FyZXQge1xuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmX190aXRsZSB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIGdhcDogJHNwYWNpbmctMjAwO1xuICAgICAgICBmb250LXNpemU6ICR0eXBlLXNpemUtMzAwO1xuICAgICAgICBmb250LXdlaWdodDogNjAwO1xuICAgICAgICBjb2xvcjogJGdyYXktMTAwMDtcblxuICAgICAgICBzdmcge1xuICAgICAgICAgICAgd2lkdGg6IDAuNzVyZW07XG4gICAgICAgICAgICBoZWlnaHQ6IDAuNzVyZW07XG4gICAgICAgICAgICBwYXRoIHtcbiAgICAgICAgICAgICAgICBmaWxsOiAkb3JhbmdlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgJl9fYm9keSB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBwYWRkaW5nOiAkc3BhY2luZy00MDA7XG4gICAgICAgIHBhZGRpbmctdG9wOiAwO1xuICAgICAgICBpbnRlcnBvbGF0ZS1zaXplOiBhbGxvdy1rZXl3b3JkcztcbiAgICAgICAgdHJhbnNpdGlvbjogaGVpZ2h0IDAuM3MgZWFzZSwgb3ZlcmZsb3cgMC4zcyBlYXNlIDMwMG1zO1xuXG4gICAgICAgICYuY2xvc2VkIHtcbiAgICAgICAgICAgIGhlaWdodDogMDtcbiAgICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgICAgICBwYWRkaW5nOiAwO1xuXG4gICAgICAgICAgICBAaW5jbHVkZSBtcSh0YWJsZXQpIHtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IHVuc2V0O1xuICAgICAgICAgICAgICAgIG92ZXJmbG93OiB1bnNldDtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAkc3BhY2luZy00MDA7XG4gICAgICAgICAgICAgICAgcGFkZGluZy10b3A6IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmX19zZWxlY3RzIHtcbiAgICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maWxsLCBtaW5tYXgoMjAwcHgsIDFmcikpO1xuICAgICAgICBnYXA6ICRzcGFjaW5nLTQwMDtcbiAgICB9XG5cbiAgICAmX19jbGVhciB7XG4gICAgICAgIGZvbnQtZmFtaWx5OiAkcmFsZXdheTtcbiAgICAgICAgZm9udC1zaXplOiAkdHlwZS1zaXplLTIwMDtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICAgICAgY29sb3I6ICRvcmFuZ2U7XG4gICAgICAgIGJhY2tncm91bmQ6ICRncmF5LTA7XG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICRvcmFuZ2U7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6ICRzcGFjaW5nLTA1MDtcbiAgICAgICAgcGFkZGluZzogJHNwYWNpbmctMjAwICRzcGFjaW5nLTMwMDtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlO1xuXG4gICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgYmFja2dyb3VuZDogJG9yYW5nZTtcbiAgICAgICAgICAgIGNvbG9yOiAkZ3JheS0wO1xuICAgICAgICB9XG5cbiAgICAgICAgJi13cmFwcGVyIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICBwYWRkaW5nLXRvcDogJHNwYWNpbmctNDAwO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgc2VsZWN0IHtcbiAgICAgICAgcGFkZGluZzogJHNwYWNpbmctMjAwO1xuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAkZ3JheS0yMDA7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6ICRzcGFjaW5nLTA1MDtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGdyYXktMDtcbiAgICAgICAgZm9udC1mYW1pbHk6ICRyYWxld2F5O1xuICAgICAgICBmb250LXdlaWdodDogNTAwO1xuICAgICAgICBmb250LXNpemU6ICR0eXBlLXNpemUtMjAwO1xuICAgICAgICBjb2xvcjogJGdyYXktODAwO1xuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuXG4gICAgICAgICY6Zm9jdXMge1xuICAgICAgICAgICAgb3V0bGluZTogbm9uZTtcbiAgICAgICAgICAgIGJvcmRlci1jb2xvcjogJHRlYWw7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBpbnB1dFt0eXBlPVwidGV4dFwiXSB7XG4gICAgICAgIHBhZGRpbmc6ICRzcGFjaW5nLTIwMDtcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgJGdyYXktMjAwO1xuICAgICAgICBib3JkZXItcmFkaXVzOiAkc3BhY2luZy0wNTA7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRncmF5LTA7XG4gICAgICAgIGZvbnQtZmFtaWx5OiAkcmFsZXdheTtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICAgICAgZm9udC1zaXplOiAkdHlwZS1zaXplLTIwMDtcbiAgICAgICAgY29sb3I6ICRncmF5LTgwMDtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG5cbiAgICAgICAgJjpmb2N1cyB7XG4gICAgICAgICAgICBvdXRsaW5lOiBub25lO1xuICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiAkdGVhbDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC5maWx0ZXItZGV0YWlsIHtcbiAgICAgICAgJi5kaXNhYmxlZCB7XG4gICAgICAgICAgICBsYWJlbCB7XG4gICAgICAgICAgICAgICAgY29sb3I6ICRncmF5LTQwMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBsYWJlbCB7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgIHBhZGRpbmctYm90dG9tOiAkc3BhY2luZy0yMDA7XG4gICAgICAgICAgICBmb250LWZhbWlseTogJHJhbGV3YXk7XG4gICAgICAgICAgICBmb250LXNpemU6IDAuNzVyZW07XG4gICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgICAgICAgIGNvbG9yOiAkZ3JheS0xMDAwO1xuICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgICAgICAgIGxldHRlci1zcGFjaW5nOiAwLjA1ZW07XG4gICAgICAgIH1cbiAgICB9XG59XG4iXX0= */
